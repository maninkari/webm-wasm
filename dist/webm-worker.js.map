{"version":3,"file":"webm-worker.js","sources":["webm-wasm.js","../src/worker/defaults.js","../src/worker/webm-worker.js"],"sourcesContent":["\nvar Module = (function() {\n  var _scriptDir = import.meta.url;\n  return (\nfunction(Module) {\n  Module = Module || {};\n\n// Copyright 2010 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n\"use strict\";\n\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = typeof Module !== 'undefined' ? Module : {};\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n// {{PRE_JSES}}\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = {};\nvar key;\nfor (key in Module) {\n  if (Module.hasOwnProperty(key)) {\n    moduleOverrides[key] = Module[key];\n  }\n}\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = function(status, toThrow) {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\nvar ENVIRONMENT_IS_WEB = false;\nvar ENVIRONMENT_IS_WORKER = false;\nvar ENVIRONMENT_IS_NODE = false;\nvar ENVIRONMENT_HAS_NODE = false;\nvar ENVIRONMENT_IS_SHELL = false;\nENVIRONMENT_IS_WEB = typeof window === 'object';\nENVIRONMENT_IS_WORKER = typeof importScripts === 'function';\n// A web environment like Electron.js can have Node enabled, so we must\n// distinguish between Node-enabled environments and Node environments per se.\n// This will allow the former to do things like mount NODEFS.\n// Extended check using process.versions fixes issue #8816.\n// (Also makes redundant the original check that 'require' is a function.)\nENVIRONMENT_HAS_NODE = typeof process === 'object' && typeof process.versions === 'object' && typeof process.versions.node === 'string';\nENVIRONMENT_IS_NODE = ENVIRONMENT_HAS_NODE && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;\nENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\n\n\n// Three configurations we can be running in:\n// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)\n// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)\n// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)\n\n\n\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_,\n    readAsync,\n    readBinary,\n    setWindowTitle;\n\nif (ENVIRONMENT_IS_NODE) {\n  scriptDirectory = __dirname + '/';\n\n  // Expose functionality in the same simple way that the shells work\n  // Note that we pollute the global namespace here, otherwise we break in node\n  var nodeFS;\n  var nodePath;\n\n  read_ = function shell_read(filename, binary) {\n    var ret;\n      if (!nodeFS) nodeFS = require('fs');\n      if (!nodePath) nodePath = require('path');\n      filename = nodePath['normalize'](filename);\n      ret = nodeFS['readFileSync'](filename);\n    return binary ? ret : ret.toString();\n  };\n\n  readBinary = function readBinary(filename) {\n    var ret = read_(filename, true);\n    if (!ret.buffer) {\n      ret = new Uint8Array(ret);\n    }\n    assert(ret.buffer);\n    return ret;\n  };\n\n  if (process['argv'].length > 1) {\n    thisProgram = process['argv'][1].replace(/\\\\/g, '/');\n  }\n\n  arguments_ = process['argv'].slice(2);\n\n  // MODULARIZE will export the module in the proper place outside, we don't need to export here\n\n  process['on']('uncaughtException', function(ex) {\n    // suppress ExitStatus exceptions from showing an error\n    if (!(ex instanceof ExitStatus)) {\n      throw ex;\n    }\n  });\n\n  process['on']('unhandledRejection', abort);\n\n  quit_ = function(status) {\n    process['exit'](status);\n  };\n\n  Module['inspect'] = function () { return '[Emscripten Module object]'; };\n} else\nif (ENVIRONMENT_IS_SHELL) {\n\n\n  if (typeof read != 'undefined') {\n    read_ = function shell_read(f) {\n      return read(f);\n    };\n  }\n\n  readBinary = function readBinary(f) {\n    var data;\n    if (typeof readbuffer === 'function') {\n      return new Uint8Array(readbuffer(f));\n    }\n    data = read(f, 'binary');\n    assert(typeof data === 'object');\n    return data;\n  };\n\n  if (typeof scriptArgs != 'undefined') {\n    arguments_ = scriptArgs;\n  } else if (typeof arguments != 'undefined') {\n    arguments_ = arguments;\n  }\n\n  if (typeof quit === 'function') {\n    quit_ = function(status) {\n      quit(status);\n    };\n  }\n\n  if (typeof print !== 'undefined') {\n    // Prefer to use print/printErr where they exist, as they usually work better.\n    if (typeof console === 'undefined') console = {};\n    console.log = print;\n    console.warn = console.error = typeof printErr !== 'undefined' ? printErr : print;\n  }\n} else\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // When MODULARIZE (and not _INSTANCE), this JS may be executed later, after document.currentScript\n  // is gone, so we saved it, and we use it here instead of any other info.\n  if (_scriptDir) {\n    scriptDirectory = _scriptDir;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  if (scriptDirectory.indexOf('blob:') !== 0) {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf('/')+1);\n  } else {\n    scriptDirectory = '';\n  }\n\n\n  read_ = function shell_read(url) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.send(null);\n      return xhr.responseText;\n  };\n\n  if (ENVIRONMENT_IS_WORKER) {\n    readBinary = function readBinary(url) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, false);\n        xhr.responseType = 'arraybuffer';\n        xhr.send(null);\n        return new Uint8Array(xhr.response);\n    };\n  }\n\n  readAsync = function readAsync(url, onload, onerror) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = function xhr_onload() {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  };\n\n  setWindowTitle = function(title) { document.title = title };\n} else\n{\n}\n\n// Set up the out() and err() hooks, which are how we can print to stdout or\n// stderr, respectively.\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.warn.bind(console);\n\n// Merge back in the overrides\nfor (key in moduleOverrides) {\n  if (moduleOverrides.hasOwnProperty(key)) {\n    Module[key] = moduleOverrides[key];\n  }\n}\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = null;\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\nif (Module['arguments']) arguments_ = Module['arguments'];\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];\nif (Module['quit']) quit_ = Module['quit'];\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n\n// TODO remove when SDL2 is fixed (also see above)\n\n\n\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n// {{PREAMBLE_ADDITIONS}}\n\nvar STACK_ALIGN = 16;\n\n\nfunction dynamicAlloc(size) {\n  var ret = HEAP32[DYNAMICTOP_PTR>>2];\n  var end = (ret + size + 15) & -16;\n  if (end > _emscripten_get_heap_size()) {\n    abort();\n  }\n  HEAP32[DYNAMICTOP_PTR>>2] = end;\n  return ret;\n}\n\nfunction alignMemory(size, factor) {\n  if (!factor) factor = STACK_ALIGN; // stack alignment (16-byte) by default\n  return Math.ceil(size / factor) * factor;\n}\n\nfunction getNativeTypeSize(type) {\n  switch (type) {\n    case 'i1': case 'i8': return 1;\n    case 'i16': return 2;\n    case 'i32': return 4;\n    case 'i64': return 8;\n    case 'float': return 4;\n    case 'double': return 8;\n    default: {\n      if (type[type.length-1] === '*') {\n        return 4; // A pointer\n      } else if (type[0] === 'i') {\n        var bits = parseInt(type.substr(1));\n        assert(bits % 8 === 0, 'getNativeTypeSize invalid bits ' + bits + ', type ' + type);\n        return bits / 8;\n      } else {\n        return 0;\n      }\n    }\n  }\n}\n\nfunction warnOnce(text) {\n  if (!warnOnce.shown) warnOnce.shown = {};\n  if (!warnOnce.shown[text]) {\n    warnOnce.shown[text] = 1;\n    err(text);\n  }\n}\n\nvar asm2wasmImports = { // special asm2wasm imports\n    \"f64-rem\": function(x, y) {\n        return x % y;\n    },\n    \"debugger\": function() {\n    }\n};\n\n\n\nvar jsCallStartIndex = 1;\nvar functionPointers = new Array(0);\n\n// Wraps a JS function as a wasm function with a given signature.\n// In the future, we may get a WebAssembly.Function constructor. Until then,\n// we create a wasm module that takes the JS function as an import with a given\n// signature, and re-exports that as a wasm function.\nfunction convertJsFunctionToWasm(func, sig) {\n\n  // The module is static, with the exception of the type section, which is\n  // generated based on the signature passed in.\n  var typeSection = [\n    0x01, // id: section,\n    0x00, // length: 0 (placeholder)\n    0x01, // count: 1\n    0x60, // form: func\n  ];\n  var sigRet = sig.slice(0, 1);\n  var sigParam = sig.slice(1);\n  var typeCodes = {\n    'i': 0x7f, // i32\n    'j': 0x7e, // i64\n    'f': 0x7d, // f32\n    'd': 0x7c, // f64\n  };\n\n  // Parameters, length + signatures\n  typeSection.push(sigParam.length);\n  for (var i = 0; i < sigParam.length; ++i) {\n    typeSection.push(typeCodes[sigParam[i]]);\n  }\n\n  // Return values, length + signatures\n  // With no multi-return in MVP, either 0 (void) or 1 (anything else)\n  if (sigRet == 'v') {\n    typeSection.push(0x00);\n  } else {\n    typeSection = typeSection.concat([0x01, typeCodes[sigRet]]);\n  }\n\n  // Write the overall length of the type section back into the section header\n  // (excepting the 2 bytes for the section id and length)\n  typeSection[1] = typeSection.length - 2;\n\n  // Rest of the module is static\n  var bytes = new Uint8Array([\n    0x00, 0x61, 0x73, 0x6d, // magic (\"\\0asm\")\n    0x01, 0x00, 0x00, 0x00, // version: 1\n  ].concat(typeSection, [\n    0x02, 0x07, // import section\n      // (import \"e\" \"f\" (func 0 (type 0)))\n      0x01, 0x01, 0x65, 0x01, 0x66, 0x00, 0x00,\n    0x07, 0x05, // export section\n      // (export \"f\" (func 0 (type 0)))\n      0x01, 0x01, 0x66, 0x00, 0x00,\n  ]));\n\n   // We can compile this wasm module synchronously because it is very small.\n  // This accepts an import (at \"e.f\"), that it reroutes to an export (at \"f\")\n  var module = new WebAssembly.Module(bytes);\n  var instance = new WebAssembly.Instance(module, {\n    e: {\n      f: func\n    }\n  });\n  var wrappedFunc = instance.exports.f;\n  return wrappedFunc;\n}\n\n// Add a wasm function to the table.\nfunction addFunctionWasm(func, sig) {\n  var table = wasmTable;\n  var ret = table.length;\n\n  // Grow the table\n  try {\n    table.grow(1);\n  } catch (err) {\n    if (!err instanceof RangeError) {\n      throw err;\n    }\n    throw 'Unable to grow wasm table. Use a higher value for RESERVED_FUNCTION_POINTERS or set ALLOW_TABLE_GROWTH.';\n  }\n\n  // Insert new element\n  try {\n    // Attempting to call this with JS function will cause of table.set() to fail\n    table.set(ret, func);\n  } catch (err) {\n    if (!err instanceof TypeError) {\n      throw err;\n    }\n    assert(typeof sig !== 'undefined', 'Missing signature argument to addFunction');\n    var wrapped = convertJsFunctionToWasm(func, sig);\n    table.set(ret, wrapped);\n  }\n\n  return ret;\n}\n\nfunction removeFunctionWasm(index) {\n  // TODO(sbc): Look into implementing this to allow re-using of table slots\n}\n\n// 'sig' parameter is required for the llvm backend but only when func is not\n// already a WebAssembly function.\nfunction addFunction(func, sig) {\n\n\n  var base = 0;\n  for (var i = base; i < base + 0; i++) {\n    if (!functionPointers[i]) {\n      functionPointers[i] = func;\n      return jsCallStartIndex + i;\n    }\n  }\n  throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';\n\n}\n\nfunction removeFunction(index) {\n\n  functionPointers[index-jsCallStartIndex] = null;\n}\n\nvar funcWrappers = {};\n\nfunction getFuncWrapper(func, sig) {\n  if (!func) return; // on null pointer, return undefined\n  assert(sig);\n  if (!funcWrappers[sig]) {\n    funcWrappers[sig] = {};\n  }\n  var sigCache = funcWrappers[sig];\n  if (!sigCache[func]) {\n    // optimize away arguments usage in common cases\n    if (sig.length === 1) {\n      sigCache[func] = function dynCall_wrapper() {\n        return dynCall(sig, func);\n      };\n    } else if (sig.length === 2) {\n      sigCache[func] = function dynCall_wrapper(arg) {\n        return dynCall(sig, func, [arg]);\n      };\n    } else {\n      // general case\n      sigCache[func] = function dynCall_wrapper() {\n        return dynCall(sig, func, Array.prototype.slice.call(arguments));\n      };\n    }\n  }\n  return sigCache[func];\n}\n\n\nfunction makeBigInt(low, high, unsigned) {\n  return unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0));\n}\n\nfunction dynCall(sig, ptr, args) {\n  if (args && args.length) {\n    return Module['dynCall_' + sig].apply(null, [ptr].concat(args));\n  } else {\n    return Module['dynCall_' + sig].call(null, ptr);\n  }\n}\n\nvar tempRet0 = 0;\n\nvar setTempRet0 = function(value) {\n  tempRet0 = value;\n};\n\nvar getTempRet0 = function() {\n  return tempRet0;\n};\n\n\nvar Runtime = {\n};\n\n// The address globals begin at. Very low in memory, for code size and optimization opportunities.\n// Above 0 is static memory, starting with globals.\n// Then the stack.\n// Then 'dynamic' memory for sbrk.\nvar GLOBAL_BASE = 1024;\n\n\n\n\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\n\nvar wasmBinary;if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\nvar noExitRuntime;if (Module['noExitRuntime']) noExitRuntime = Module['noExitRuntime'];\n\n\nif (typeof WebAssembly !== 'object') {\n  err('no native wasm support detected');\n}\n\n\n// In MINIMAL_RUNTIME, setValue() and getValue() are only available when building with safe heap enabled, for heap safety checking.\n// In traditional runtime, setValue() and getValue() are always available (although their use is highly discouraged due to perf penalties)\n\n/** @type {function(number, number, string, boolean=)} */\nfunction setValue(ptr, value, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': HEAP8[((ptr)>>0)]=value; break;\n      case 'i8': HEAP8[((ptr)>>0)]=value; break;\n      case 'i16': HEAP16[((ptr)>>1)]=value; break;\n      case 'i32': HEAP32[((ptr)>>2)]=value; break;\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;\n      case 'float': HEAPF32[((ptr)>>2)]=value; break;\n      case 'double': HEAPF64[((ptr)>>3)]=value; break;\n      default: abort('invalid type for setValue: ' + type);\n    }\n}\n\n/** @type {function(number, string, boolean=)} */\nfunction getValue(ptr, type, noSafe) {\n  type = type || 'i8';\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\n    switch(type) {\n      case 'i1': return HEAP8[((ptr)>>0)];\n      case 'i8': return HEAP8[((ptr)>>0)];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': return HEAP32[((ptr)>>2)];\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      default: abort('invalid type for getValue: ' + type);\n    }\n  return null;\n}\n\n\n\n\n\n// Wasm globals\n\nvar wasmMemory;\n\n// In fastcomp asm.js, we don't need a wasm Table at all.\n// In the wasm backend, we polyfill the WebAssembly object,\n// so this creates a (non-native-wasm) table for us.\nvar wasmTable = new WebAssembly.Table({\n  'initial': 16192,\n  'maximum': 16192,\n  'element': 'anyfunc'\n});\n\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS = 0;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed: ' + text);\n  }\n}\n\n// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)\nfunction getCFunc(ident) {\n  var func = Module['_' + ident]; // closure exported function\n  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');\n  return func;\n}\n\n// C calling interface.\nfunction ccall(ident, returnType, argTypes, args, opts) {\n  // For fast lookup of conversion functions\n  var toC = {\n    'string': function(str) {\n      var ret = 0;\n      if (str !== null && str !== undefined && str !== 0) { // null string\n        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\n        var len = (str.length << 2) + 1;\n        ret = stackAlloc(len);\n        stringToUTF8(str, ret, len);\n      }\n      return ret;\n    },\n    'array': function(arr) {\n      var ret = stackAlloc(arr.length);\n      writeArrayToMemory(arr, ret);\n      return ret;\n    }\n  };\n\n  function convertReturnValue(ret) {\n    if (returnType === 'string') return UTF8ToString(ret);\n    if (returnType === 'boolean') return Boolean(ret);\n    return ret;\n  }\n\n  var func = getCFunc(ident);\n  var cArgs = [];\n  var stack = 0;\n  if (args) {\n    for (var i = 0; i < args.length; i++) {\n      var converter = toC[argTypes[i]];\n      if (converter) {\n        if (stack === 0) stack = stackSave();\n        cArgs[i] = converter(args[i]);\n      } else {\n        cArgs[i] = args[i];\n      }\n    }\n  }\n  var ret = func.apply(null, cArgs);\n\n  ret = convertReturnValue(ret);\n  if (stack !== 0) stackRestore(stack);\n  return ret;\n}\n\nfunction cwrap(ident, returnType, argTypes, opts) {\n  argTypes = argTypes || [];\n  // When the function takes numbers and returns a number, we can just return\n  // the original function\n  var numericArgs = argTypes.every(function(type){ return type === 'number'});\n  var numericRet = returnType !== 'string';\n  if (numericRet && numericArgs && !opts) {\n    return getCFunc(ident);\n  }\n  return function() {\n    return ccall(ident, returnType, argTypes, arguments, opts);\n  }\n}\n\nvar ALLOC_NORMAL = 0; // Tries to use _malloc()\nvar ALLOC_STACK = 1; // Lives for the duration of the current function call\nvar ALLOC_DYNAMIC = 2; // Cannot be freed except through sbrk\nvar ALLOC_NONE = 3; // Do not allocate\n\n// allocate(): This is for internal use. You can use it yourself as well, but the interface\n//             is a little tricky (see docs right below). The reason is that it is optimized\n//             for multiple syntaxes to save space in generated code. So you should\n//             normally not use allocate(), and instead allocate memory using _malloc(),\n//             initialize it with setValue(), and so forth.\n// @slab: An array of data, or a number. If a number, then the size of the block to allocate,\n//        in *bytes* (note that this is sometimes confusing: the next parameter does not\n//        affect this!)\n// @types: Either an array of types, one for each byte (or 0 if no type at that position),\n//         or a single type which is used for the entire block. This only matters if there\n//         is initial data - if @slab is a number, then this does not matter at all and is\n//         ignored.\n// @allocator: How to allocate memory, see ALLOC_*\n/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */\nfunction allocate(slab, types, allocator, ptr) {\n  var zeroinit, size;\n  if (typeof slab === 'number') {\n    zeroinit = true;\n    size = slab;\n  } else {\n    zeroinit = false;\n    size = slab.length;\n  }\n\n  var singleType = typeof types === 'string' ? types : null;\n\n  var ret;\n  if (allocator == ALLOC_NONE) {\n    ret = ptr;\n  } else {\n    ret = [_malloc,\n    stackAlloc,\n    dynamicAlloc][allocator](Math.max(size, singleType ? 1 : types.length));\n  }\n\n  if (zeroinit) {\n    var stop;\n    ptr = ret;\n    assert((ret & 3) == 0);\n    stop = ret + (size & ~3);\n    for (; ptr < stop; ptr += 4) {\n      HEAP32[((ptr)>>2)]=0;\n    }\n    stop = ret + size;\n    while (ptr < stop) {\n      HEAP8[((ptr++)>>0)]=0;\n    }\n    return ret;\n  }\n\n  if (singleType === 'i8') {\n    if (slab.subarray || slab.slice) {\n      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);\n    } else {\n      HEAPU8.set(new Uint8Array(slab), ret);\n    }\n    return ret;\n  }\n\n  var i = 0, type, typeSize, previousType;\n  while (i < size) {\n    var curr = slab[i];\n\n    type = singleType || types[i];\n    if (type === 0) {\n      i++;\n      continue;\n    }\n\n    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later\n\n    setValue(ret+i, curr, type);\n\n    // no need to look up size unless type changes, so cache it\n    if (previousType !== type) {\n      typeSize = getNativeTypeSize(type);\n      previousType = type;\n    }\n    i += typeSize;\n  }\n\n  return ret;\n}\n\n// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready\nfunction getMemory(size) {\n  if (!runtimeInitialized) return dynamicAlloc(size);\n  return _malloc(size);\n}\n\n\n\n\n/** @type {function(number, number=)} */\nfunction Pointer_stringify(ptr, length) {\n  abort(\"this function has been removed - you should use UTF8ToString(ptr, maxBytesToRead) instead!\");\n}\n\n// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nfunction AsciiToString(ptr) {\n  var str = '';\n  while (1) {\n    var ch = HEAPU8[((ptr++)>>0)];\n    if (!ch) return str;\n    str += String.fromCharCode(ch);\n  }\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.\n\nfunction stringToAscii(str, outPtr) {\n  return writeAsciiToMemory(str, outPtr, false);\n}\n\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;\n\n/**\n * @param {number} idx\n * @param {number=} maxBytesToRead\n * @return {string}\n */\nfunction UTF8ArrayToString(u8Array, idx, maxBytesToRead) {\n  var endIdx = idx + maxBytesToRead;\n  var endPtr = idx;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  // (As a tiny code save trick, compare endPtr against endIdx using a negation, so that undefined means Infinity)\n  while (u8Array[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {\n    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));\n  } else {\n    var str = '';\n    // If building with TextDecoder, we have already computed the string length above, so test loop end condition against that\n    while (idx < endPtr) {\n      // For UTF8 byte structure, see:\n      // http://en.wikipedia.org/wiki/UTF-8#Description\n      // https://www.ietf.org/rfc/rfc2279.txt\n      // https://tools.ietf.org/html/rfc3629\n      var u0 = u8Array[idx++];\n      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n      var u1 = u8Array[idx++] & 63;\n      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n      var u2 = u8Array[idx++] & 63;\n      if ((u0 & 0xF0) == 0xE0) {\n        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n      } else {\n        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (u8Array[idx++] & 63);\n      }\n\n      if (u0 < 0x10000) {\n        str += String.fromCharCode(u0);\n      } else {\n        var ch = u0 - 0x10000;\n        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n      }\n    }\n  }\n  return str;\n}\n\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns a\n// copy of that string as a Javascript String object.\n// maxBytesToRead: an optional length that specifies the maximum number of bytes to read. You can omit\n//                 this parameter to scan the string until the first \\0 byte. If maxBytesToRead is\n//                 passed, and the string at [ptr, ptr+maxBytesToReadr[ contains a null byte in the\n//                 middle, then the string will cut short at that byte index (i.e. maxBytesToRead will\n//                 not produce a string of exact length [ptr, ptr+maxBytesToRead[)\n//                 N.B. mixing frequent uses of UTF8ToString() with and without maxBytesToRead may\n//                 throw JS JIT optimizations off, so it is worth to consider consistently using one\n//                 style or the other.\n/**\n * @param {number} ptr\n * @param {number=} maxBytesToRead\n * @return {string}\n */\nfunction UTF8ToString(ptr, maxBytesToRead) {\n  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n}\n\n// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',\n// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.\n//   outIdx: The starting offset in the array to begin the copying.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array.\n//                    This count should include the null terminator,\n//                    i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {\n  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.\n    return 0;\n\n  var startIdx = outIdx;\n  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) {\n      var u1 = str.charCodeAt(++i);\n      u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n    }\n    if (u <= 0x7F) {\n      if (outIdx >= endIdx) break;\n      outU8Array[outIdx++] = u;\n    } else if (u <= 0x7FF) {\n      if (outIdx + 1 >= endIdx) break;\n      outU8Array[outIdx++] = 0xC0 | (u >> 6);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else if (u <= 0xFFFF) {\n      if (outIdx + 2 >= endIdx) break;\n      outU8Array[outIdx++] = 0xE0 | (u >> 12);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    } else {\n      if (outIdx + 3 >= endIdx) break;\n      outU8Array[outIdx++] = 0xF0 | (u >> 18);\n      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\n      outU8Array[outIdx++] = 0x80 | (u & 63);\n    }\n  }\n  // Null-terminate the pointer to the buffer.\n  outU8Array[outIdx] = 0;\n  return outIdx - startIdx;\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.\nfunction lengthBytesUTF8(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);\n    if (u <= 0x7F) ++len;\n    else if (u <= 0x7FF) len += 2;\n    else if (u <= 0xFFFF) len += 3;\n    else len += 4;\n  }\n  return len;\n}\n\n\n// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns\n// a copy of that string as a Javascript String object.\n\nvar UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;\nfunction UTF16ToString(ptr) {\n  var endPtr = ptr;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\n  var idx = endPtr >> 1;\n  while (HEAP16[idx]) ++idx;\n  endPtr = idx << 1;\n\n  if (endPtr - ptr > 32 && UTF16Decoder) {\n    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n  } else {\n    var i = 0;\n\n    var str = '';\n    while (1) {\n      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];\n      if (codeUnit == 0) return str;\n      ++i;\n      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.\n      str += String.fromCharCode(codeUnit);\n    }\n  }\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.\n// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 2) return 0;\n  maxBytesToWrite -= 2; // Null terminator.\n  var startPtr = outPtr;\n  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;\n  for (var i = 0; i < numCharsToWrite; ++i) {\n    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    HEAP16[((outPtr)>>1)]=codeUnit;\n    outPtr += 2;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP16[((outPtr)>>1)]=0;\n  return outPtr - startPtr;\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF16(str) {\n  return str.length*2;\n}\n\nfunction UTF32ToString(ptr) {\n  var i = 0;\n\n  var str = '';\n  while (1) {\n    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];\n    if (utf32 == 0)\n      return str;\n    ++i;\n    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    if (utf32 >= 0x10000) {\n      var ch = utf32 - 0x10000;\n      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n    } else {\n      str += String.fromCharCode(utf32);\n    }\n  }\n}\n\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\n// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.\n// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.\n// Parameters:\n//   str: the Javascript string to copy.\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\n//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.\n//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.\n// Returns the number of bytes written, EXCLUDING the null terminator.\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n  if (maxBytesToWrite === undefined) {\n    maxBytesToWrite = 0x7FFFFFFF;\n  }\n  if (maxBytesToWrite < 4) return 0;\n  var startPtr = outPtr;\n  var endPtr = startPtr + maxBytesToWrite - 4;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n      var trailSurrogate = str.charCodeAt(++i);\n      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\n    }\n    HEAP32[((outPtr)>>2)]=codeUnit;\n    outPtr += 4;\n    if (outPtr + 4 > endPtr) break;\n  }\n  // Null-terminate the pointer to the HEAP.\n  HEAP32[((outPtr)>>2)]=0;\n  return outPtr - startPtr;\n}\n\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\n\nfunction lengthBytesUTF32(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var codeUnit = str.charCodeAt(i);\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n    len += 4;\n  }\n\n  return len;\n}\n\n// Allocate heap space for a JS string, and write it there.\n// It is the responsibility of the caller to free() that memory.\nfunction allocateUTF8(str) {\n  var size = lengthBytesUTF8(str) + 1;\n  var ret = _malloc(size);\n  if (ret) stringToUTF8Array(str, HEAP8, ret, size);\n  return ret;\n}\n\n// Allocate stack space for a JS string, and write it there.\nfunction allocateUTF8OnStack(str) {\n  var size = lengthBytesUTF8(str) + 1;\n  var ret = stackAlloc(size);\n  stringToUTF8Array(str, HEAP8, ret, size);\n  return ret;\n}\n\n// Deprecated: This function should not be called because it is unsafe and does not provide\n// a maximum length limit of how many bytes it is allowed to write. Prefer calling the\n// function stringToUTF8Array() instead, which takes in a maximum length that can be used\n// to be secure from out of bounds writes.\n/** @deprecated */\nfunction writeStringToMemory(string, buffer, dontAddNull) {\n  warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');\n\n  var /** @type {number} */ lastChar, /** @type {number} */ end;\n  if (dontAddNull) {\n    // stringToUTF8Array always appends null. If we don't want to do that, remember the\n    // character that existed at the location where the null will be placed, and restore\n    // that after the write (below).\n    end = buffer + lengthBytesUTF8(string);\n    lastChar = HEAP8[end];\n  }\n  stringToUTF8(string, buffer, Infinity);\n  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.\n}\n\nfunction writeArrayToMemory(array, buffer) {\n  HEAP8.set(array, buffer);\n}\n\nfunction writeAsciiToMemory(str, buffer, dontAddNull) {\n  for (var i = 0; i < str.length; ++i) {\n    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);\n  }\n  // Null-terminate the pointer to the HEAP.\n  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;\n}\n\n\n\n\n// Memory management\n\nvar PAGE_SIZE = 16384;\nvar WASM_PAGE_SIZE = 65536;\nvar ASMJS_PAGE_SIZE = 16777216;\n\nfunction alignUp(x, multiple) {\n  if (x % multiple > 0) {\n    x += multiple - (x % multiple);\n  }\n  return x;\n}\n\nvar HEAP,\n/** @type {ArrayBuffer} */\n  buffer,\n/** @type {Int8Array} */\n  HEAP8,\n/** @type {Uint8Array} */\n  HEAPU8,\n/** @type {Int16Array} */\n  HEAP16,\n/** @type {Uint16Array} */\n  HEAPU16,\n/** @type {Int32Array} */\n  HEAP32,\n/** @type {Uint32Array} */\n  HEAPU32,\n/** @type {Float32Array} */\n  HEAPF32,\n/** @type {Float64Array} */\n  HEAPF64;\n\nfunction updateGlobalBufferAndViews(buf) {\n  buffer = buf;\n  Module['HEAP8'] = HEAP8 = new Int8Array(buf);\n  Module['HEAP16'] = HEAP16 = new Int16Array(buf);\n  Module['HEAP32'] = HEAP32 = new Int32Array(buf);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buf);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buf);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buf);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(buf);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(buf);\n}\n\n\nvar STATIC_BASE = 1024,\n    STACK_BASE = 87296,\n    STACKTOP = STACK_BASE,\n    STACK_MAX = 5330176,\n    DYNAMIC_BASE = 5330176,\n    DYNAMICTOP_PTR = 87088;\n\n\n\n\nvar TOTAL_STACK = 5242880;\n\nvar INITIAL_TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;\n\n\n\n\n\n\n\n// In standalone mode, the wasm creates the memory, and the user can't provide it.\n// In non-standalone/normal mode, we create the memory here.\n\n// Create the main memory. (Note: this isn't used in STANDALONE_WASM mode since the wasm\n// memory is created in the wasm, not in JS.)\n\n  if (Module['wasmMemory']) {\n    wasmMemory = Module['wasmMemory'];\n  } else\n  {\n    wasmMemory = new WebAssembly.Memory({\n      'initial': INITIAL_TOTAL_MEMORY / WASM_PAGE_SIZE\n    });\n  }\n\n\nif (wasmMemory) {\n  buffer = wasmMemory.buffer;\n}\n\n// If the user provides an incorrect length, just use that length instead rather than providing the user to\n// specifically provide the memory length with Module['TOTAL_MEMORY'].\nINITIAL_TOTAL_MEMORY = buffer.byteLength;\nupdateGlobalBufferAndViews(buffer);\n\nHEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;\n\n\n\n\n\n\n\n\n\n\nfunction callRuntimeCallbacks(callbacks) {\n  while(callbacks.length > 0) {\n    var callback = callbacks.shift();\n    if (typeof callback == 'function') {\n      callback();\n      continue;\n    }\n    var func = callback.func;\n    if (typeof func === 'number') {\n      if (callback.arg === undefined) {\n        Module['dynCall_v'](func);\n      } else {\n        Module['dynCall_vi'](func, callback.arg);\n      }\n    } else {\n      func(callback.arg === undefined ? null : callback.arg);\n    }\n  }\n}\n\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATMAIN__    = []; // functions called when main() is to be run\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\nvar runtimeExited = false;\n\n\nfunction preRun() {\n\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n  runtimeInitialized = true;\n  \n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n  \n  callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction exitRuntime() {\n  runtimeExited = true;\n}\n\nfunction postRun() {\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnPreMain(cb) {\n  __ATMAIN__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\nfunction unSign(value, bits, ignore) {\n  if (value >= 0) {\n    return value;\n  }\n  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts\n                    : Math.pow(2, bits)         + value;\n}\nfunction reSign(value, bits, ignore) {\n  if (value <= 0) {\n    return value;\n  }\n  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32\n                        : Math.pow(2, bits-1);\n  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that\n                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors\n                                                       // TODO: In i64 mode 1, resign the two parts separately and safely\n    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts\n  }\n  return value;\n}\n\n\n\nvar Math_abs = Math.abs;\nvar Math_cos = Math.cos;\nvar Math_sin = Math.sin;\nvar Math_tan = Math.tan;\nvar Math_acos = Math.acos;\nvar Math_asin = Math.asin;\nvar Math_atan = Math.atan;\nvar Math_atan2 = Math.atan2;\nvar Math_exp = Math.exp;\nvar Math_log = Math.log;\nvar Math_sqrt = Math.sqrt;\nvar Math_ceil = Math.ceil;\nvar Math_floor = Math.floor;\nvar Math_pow = Math.pow;\nvar Math_imul = Math.imul;\nvar Math_fround = Math.fround;\nvar Math_round = Math.round;\nvar Math_min = Math.min;\nvar Math_max = Math.max;\nvar Math_clz32 = Math.clz32;\nvar Math_trunc = Math.trunc;\n\n\n\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\n\nfunction getUniqueRunDependency(id) {\n  return id;\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\nModule[\"preloadedImages\"] = {}; // maps url to image data\nModule[\"preloadedAudios\"] = {}; // maps url to audio data\n\n\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n\n  what += '';\n  out(what);\n  err(what);\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  throw 'abort(' + what + '). Build with -s ASSERTIONS=1 for more info.';\n}\n\n\nvar memoryInitializer = null;\n\n\n\n\n\n\n\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename) {\n  return String.prototype.startsWith ?\n      filename.startsWith(dataURIPrefix) :\n      filename.indexOf(dataURIPrefix) === 0;\n}\n\n\n\n\nvar wasmBinaryFile = 'webm-wasm.wasm';\nif (!isDataURI(wasmBinaryFile)) {\n  wasmBinaryFile = locateFile(wasmBinaryFile);\n}\n\nfunction getBinary() {\n  try {\n    if (wasmBinary) {\n      return new Uint8Array(wasmBinary);\n    }\n\n    if (readBinary) {\n      return readBinary(wasmBinaryFile);\n    } else {\n      throw \"both async and sync fetching of the wasm failed\";\n    }\n  }\n  catch (err) {\n    abort(err);\n  }\n}\n\nfunction getBinaryPromise() {\n  // if we don't have the binary yet, and have the Fetch api, use that\n  // in some environments, like Electron's render process, Fetch api may be present, but have a different context than expected, let's only use it on the Web\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === 'function') {\n    return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {\n      if (!response['ok']) {\n        throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n      }\n      return response['arrayBuffer']();\n    }).catch(function () {\n      return getBinary();\n    });\n  }\n  // Otherwise, getBinary should be able to get it synchronously\n  return new Promise(function(resolve, reject) {\n    resolve(getBinary());\n  });\n}\n\n\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm() {\n  // prepare imports\n  var info = {\n    'env': asmLibraryArg,\n    'wasi_unstable': asmLibraryArg\n    ,\n    'global': {\n      'NaN': NaN,\n      'Infinity': Infinity\n    },\n    'global.Math': Math,\n    'asm2wasm': asm2wasmImports\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  function receiveInstance(instance, module) {\n    var exports = instance.exports;\n    Module['asm'] = exports;\n    removeRunDependency('wasm-instantiate');\n  }\n   // we can't run yet (except in a pthread, where we have a custom sync instantiator)\n  addRunDependency('wasm-instantiate');\n\n\n  function receiveInstantiatedSource(output) {\n    // 'output' is a WebAssemblyInstantiatedSource object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n      // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n      // When the regression is fixed, can restore the above USE_PTHREADS-enabled path.\n    receiveInstance(output['instance']);\n  }\n\n\n  function instantiateArrayBuffer(receiver) {\n    return getBinaryPromise().then(function(binary) {\n      return WebAssembly.instantiate(binary, info);\n    }).then(receiver, function(reason) {\n      err('failed to asynchronously prepare wasm: ' + reason);\n      abort(reason);\n    });\n  }\n\n  // Prefer streaming instantiation if available.\n  function instantiateAsync() {\n    if (!wasmBinary &&\n        typeof WebAssembly.instantiateStreaming === 'function' &&\n        !isDataURI(wasmBinaryFile) &&\n        typeof fetch === 'function') {\n      fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function (response) {\n        var result = WebAssembly.instantiateStreaming(response, info);\n        return result.then(receiveInstantiatedSource, function(reason) {\n            // We expect the most common failure cause to be a bad MIME type for the binary,\n            // in which case falling back to ArrayBuffer instantiation should work.\n            err('wasm streaming compile failed: ' + reason);\n            err('falling back to ArrayBuffer instantiation');\n            instantiateArrayBuffer(receiveInstantiatedSource);\n          });\n      });\n    } else {\n      return instantiateArrayBuffer(receiveInstantiatedSource);\n    }\n  }\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel\n  // to any other async startup actions they are performing.\n  if (Module['instantiateWasm']) {\n    try {\n      var exports = Module['instantiateWasm'](info, receiveInstance);\n      return exports;\n    } catch(e) {\n      err('Module.instantiateWasm callback failed with error: ' + e);\n      return false;\n    }\n  }\n\n  instantiateAsync();\n  return {}; // no exports yet; we'll fill them in later\n}\n\nModule['asm'] = createWasm;\n\n// Globals used by JS i64 conversions\nvar tempDouble;\nvar tempI64;\n\n// === Body ===\n\nvar ASM_CONSTS = [];\n\n\n\n\n\n// STATICTOP = STATIC_BASE + 86272;\n/* global initializers */  __ATINIT__.push({ func: function() { globalCtors() } });\n\n\n\n\n\n\n\n\n/* no memory initializer */\nvar tempDoublePtr = 87280\n\nfunction copyTempFloat(ptr) { // functions, because inlining this code increases code size too much\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\n}\n\nfunction copyTempDouble(ptr) {\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\n  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];\n  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];\n  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];\n  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];\n}\n\n// {{PRE_LIBRARY}}\n\n\n  function demangle(func) {\n      return func;\n    }\n\n  function demangleAll(text) {\n      var regex =\n        /\\b__Z[\\w\\d_]+/g;\n      return text.replace(regex,\n        function(x) {\n          var y = demangle(x);\n          return x === y ? x : (y + ' [' + x + ']');\n        });\n    }\n\n  function jsStackTrace() {\n      var err = new Error();\n      if (!err.stack) {\n        // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,\n        // so try that as a special-case.\n        try {\n          throw new Error(0);\n        } catch(e) {\n          err = e;\n        }\n        if (!err.stack) {\n          return '(no stack trace available)';\n        }\n      }\n      return err.stack.toString();\n    }\n\n  function stackTrace() {\n      var js = jsStackTrace();\n      if (Module['extraStackTrace']) js += '\\n' + Module['extraStackTrace']();\n      return demangleAll(js);\n    }\n\n  function ___cxa_allocate_exception(size) {\n      return _malloc(size);\n    }\n\n  \n  var ___exception_infos={};\n  \n  var ___exception_caught= [];\n  \n  function ___exception_addRef(ptr) {\n      if (!ptr) return;\n      var info = ___exception_infos[ptr];\n      info.refcount++;\n    }\n  \n  function ___exception_deAdjust(adjusted) {\n      if (!adjusted || ___exception_infos[adjusted]) return adjusted;\n      for (var key in ___exception_infos) {\n        var ptr = +key; // the iteration key is a string, and if we throw this, it must be an integer as that is what we look for\n        var adj = ___exception_infos[ptr].adjusted;\n        var len = adj.length;\n        for (var i = 0; i < len; i++) {\n          if (adj[i] === adjusted) {\n            return ptr;\n          }\n        }\n      }\n      return adjusted;\n    }function ___cxa_begin_catch(ptr) {\n      var info = ___exception_infos[ptr];\n      if (info && !info.caught) {\n        info.caught = true;\n        __ZSt18uncaught_exceptionv.uncaught_exceptions--;\n      }\n      if (info) info.rethrown = false;\n      ___exception_caught.push(ptr);\n      ___exception_addRef(___exception_deAdjust(ptr));\n      return ptr;\n    }\n\n  \n  var ___exception_last=0;function ___cxa_throw(ptr, type, destructor) {\n      ___exception_infos[ptr] = {\n        ptr: ptr,\n        adjusted: [ptr],\n        type: type,\n        destructor: destructor,\n        refcount: 0,\n        caught: false,\n        rethrown: false\n      };\n      ___exception_last = ptr;\n      if (!(\"uncaught_exception\" in __ZSt18uncaught_exceptionv)) {\n        __ZSt18uncaught_exceptionv.uncaught_exceptions = 1;\n      } else {\n        __ZSt18uncaught_exceptionv.uncaught_exceptions++;\n      }\n      throw ptr;\n    }\n\n  function ___gxx_personality_v0() {\n    }\n\n  function ___lock() {}\n\n  \n  function ___setErrNo(value) {\n      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;\n      return value;\n    }\n  \n  \n  var PATH={splitPath:function (filename) {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },normalizeArray:function (parts, allowAboveRoot) {\n        // if the path tries to go above the root, `up` ends up > 0\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n        // if the path is allowed to go above the root, restore leading ..s\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },normalize:function (path) {\n        var isAbsolute = path.charAt(0) === '/',\n            trailingSlash = path.substr(-1) === '/';\n        // Normalize the path\n        path = PATH.normalizeArray(path.split('/').filter(function(p) {\n          return !!p;\n        }), !isAbsolute).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },dirname:function (path) {\n        var result = PATH.splitPath(path),\n            root = result[0],\n            dir = result[1];\n        if (!root && !dir) {\n          // No dirname whatsoever\n          return '.';\n        }\n        if (dir) {\n          // It has a dirname, strip trailing slash\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },basename:function (path) {\n        // EMSCRIPTEN return '/'' for '/', not an empty string\n        if (path === '/') return '/';\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash+1);\n      },extname:function (path) {\n        return PATH.splitPath(path)[3];\n      },join:function () {\n        var paths = Array.prototype.slice.call(arguments, 0);\n        return PATH.normalize(paths.join('/'));\n      },join2:function (l, r) {\n        return PATH.normalize(l + '/' + r);\n      }};var SYSCALLS={buffers:[null,[],[]],printChar:function (stream, curr) {\n        var buffer = SYSCALLS.buffers[stream];\n        if (curr === 0 || curr === 10) {\n          (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n          buffer.length = 0;\n        } else {\n          buffer.push(curr);\n        }\n      },varargs:0,get:function (varargs) {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\n        return ret;\n      },getStr:function () {\n        var ret = UTF8ToString(SYSCALLS.get());\n        return ret;\n      },get64:function () {\n        var low = SYSCALLS.get(), high = SYSCALLS.get();\n        return low;\n      },getZero:function () {\n        SYSCALLS.get();\n      }};function ___syscall221(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // fcntl64\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall5(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // open\n      var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get(); // optional TODO\n      var stream = FS.open(pathname, flags, mode);\n      return stream.fd;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;\n  try {\n   // ioctl\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return -e.errno;\n  }\n  }\n\n  function ___unlock() {}\n\n  \n  function _fd_close(fd) {try {\n  \n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return e.errno;\n  }\n  }function ___wasi_fd_close() {\n  return _fd_close.apply(null, arguments)\n  }\n\n  \n  function _fd_read(fd, iov, iovcnt, pnum) {try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n      HEAP32[((pnum)>>2)]=num\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return e.errno;\n  }\n  }function ___wasi_fd_read() {\n  return _fd_read.apply(null, arguments)\n  }\n\n  \n  function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {try {\n  \n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return e.errno;\n  }\n  }function ___wasi_fd_seek() {\n  return _fd_seek.apply(null, arguments)\n  }\n\n  \n  \n  function flush_NO_FILESYSTEM() {\n      // flush anything remaining in the buffers during shutdown\n      var fflush = Module[\"_fflush\"];\n      if (fflush) fflush(0);\n      var buffers = SYSCALLS.buffers;\n      if (buffers[1].length) SYSCALLS.printChar(1, 10);\n      if (buffers[2].length) SYSCALLS.printChar(2, 10);\n    }function _fd_write(fd, iov, iovcnt, pnum) {try {\n  \n      // hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0\n      var num = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAP32[(((iov)+(i*8))>>2)];\n        var len = HEAP32[(((iov)+(i*8 + 4))>>2)];\n        for (var j = 0; j < len; j++) {\n          SYSCALLS.printChar(fd, HEAPU8[ptr+j]);\n        }\n        num += len;\n      }\n      HEAP32[((pnum)>>2)]=num\n      return 0;\n    } catch (e) {\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\n    return e.errno;\n  }\n  }function ___wasi_fd_write() {\n  return _fd_write.apply(null, arguments)\n  }\n\n  \n  function getShiftFromSize(size) {\n      switch (size) {\n          case 1: return 0;\n          case 2: return 1;\n          case 4: return 2;\n          case 8: return 3;\n          default:\n              throw new TypeError('Unknown type size: ' + size);\n      }\n    }\n  \n  \n  \n  function embind_init_charCodes() {\n      var codes = new Array(256);\n      for (var i = 0; i < 256; ++i) {\n          codes[i] = String.fromCharCode(i);\n      }\n      embind_charCodes = codes;\n    }var embind_charCodes=undefined;function readLatin1String(ptr) {\n      var ret = \"\";\n      var c = ptr;\n      while (HEAPU8[c]) {\n          ret += embind_charCodes[HEAPU8[c++]];\n      }\n      return ret;\n    }\n  \n  \n  var awaitingDependencies={};\n  \n  var registeredTypes={};\n  \n  var typeDependencies={};\n  \n  \n  \n  \n  \n  \n  var char_0=48;\n  \n  var char_9=57;function makeLegalFunctionName(name) {\n      if (undefined === name) {\n          return '_unknown';\n      }\n      name = name.replace(/[^a-zA-Z0-9_]/g, '$');\n      var f = name.charCodeAt(0);\n      if (f >= char_0 && f <= char_9) {\n          return '_' + name;\n      } else {\n          return name;\n      }\n    }function createNamedFunction(name, body) {\n      name = makeLegalFunctionName(name);\n      /*jshint evil:true*/\n      return new Function(\n          \"body\",\n          \"return function \" + name + \"() {\\n\" +\n          \"    \\\"use strict\\\";\" +\n          \"    return body.apply(this, arguments);\\n\" +\n          \"};\\n\"\n      )(body);\n    }function extendError(baseErrorType, errorName) {\n      var errorClass = createNamedFunction(errorName, function(message) {\n          this.name = errorName;\n          this.message = message;\n  \n          var stack = (new Error(message)).stack;\n          if (stack !== undefined) {\n              this.stack = this.toString() + '\\n' +\n                  stack.replace(/^Error(:[^\\n]*)?\\n/, '');\n          }\n      });\n      errorClass.prototype = Object.create(baseErrorType.prototype);\n      errorClass.prototype.constructor = errorClass;\n      errorClass.prototype.toString = function() {\n          if (this.message === undefined) {\n              return this.name;\n          } else {\n              return this.name + ': ' + this.message;\n          }\n      };\n  \n      return errorClass;\n    }var BindingError=undefined;function throwBindingError(message) {\n      throw new BindingError(message);\n    }\n  \n  \n  \n  var InternalError=undefined;function throwInternalError(message) {\n      throw new InternalError(message);\n    }function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n      myTypes.forEach(function(type) {\n          typeDependencies[type] = dependentTypes;\n      });\n  \n      function onComplete(typeConverters) {\n          var myTypeConverters = getTypeConverters(typeConverters);\n          if (myTypeConverters.length !== myTypes.length) {\n              throwInternalError('Mismatched type converter count');\n          }\n          for (var i = 0; i < myTypes.length; ++i) {\n              registerType(myTypes[i], myTypeConverters[i]);\n          }\n      }\n  \n      var typeConverters = new Array(dependentTypes.length);\n      var unregisteredTypes = [];\n      var registered = 0;\n      dependentTypes.forEach(function(dt, i) {\n          if (registeredTypes.hasOwnProperty(dt)) {\n              typeConverters[i] = registeredTypes[dt];\n          } else {\n              unregisteredTypes.push(dt);\n              if (!awaitingDependencies.hasOwnProperty(dt)) {\n                  awaitingDependencies[dt] = [];\n              }\n              awaitingDependencies[dt].push(function() {\n                  typeConverters[i] = registeredTypes[dt];\n                  ++registered;\n                  if (registered === unregisteredTypes.length) {\n                      onComplete(typeConverters);\n                  }\n              });\n          }\n      });\n      if (0 === unregisteredTypes.length) {\n          onComplete(typeConverters);\n      }\n    }function registerType(rawType, registeredInstance, options) {\n      options = options || {};\n  \n      if (!('argPackAdvance' in registeredInstance)) {\n          throw new TypeError('registerType registeredInstance requires argPackAdvance');\n      }\n  \n      var name = registeredInstance.name;\n      if (!rawType) {\n          throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n      }\n      if (registeredTypes.hasOwnProperty(rawType)) {\n          if (options.ignoreDuplicateRegistrations) {\n              return;\n          } else {\n              throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n          }\n      }\n  \n      registeredTypes[rawType] = registeredInstance;\n      delete typeDependencies[rawType];\n  \n      if (awaitingDependencies.hasOwnProperty(rawType)) {\n          var callbacks = awaitingDependencies[rawType];\n          delete awaitingDependencies[rawType];\n          callbacks.forEach(function(cb) {\n              cb();\n          });\n      }\n    }function __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n      var shift = getShiftFromSize(size);\n  \n      name = readLatin1String(name);\n      registerType(rawType, {\n          name: name,\n          'fromWireType': function(wt) {\n              // ambiguous emscripten ABI: sometimes return values are\n              // true or false, and sometimes integers (0 or 1)\n              return !!wt;\n          },\n          'toWireType': function(destructors, o) {\n              return o ? trueValue : falseValue;\n          },\n          'argPackAdvance': 8,\n          'readValueFromPointer': function(pointer) {\n              // TODO: if heap is fixed (like in asm.js) this could be executed outside\n              var heap;\n              if (size === 1) {\n                  heap = HEAP8;\n              } else if (size === 2) {\n                  heap = HEAP16;\n              } else if (size === 4) {\n                  heap = HEAP32;\n              } else {\n                  throw new TypeError(\"Unknown boolean type size: \" + name);\n              }\n              return this['fromWireType'](heap[pointer >> shift]);\n          },\n          destructorFunction: null, // This type does not need a destructor\n      });\n    }\n\n  \n  \n  \n  function ClassHandle_isAliasOf(other) {\n      if (!(this instanceof ClassHandle)) {\n          return false;\n      }\n      if (!(other instanceof ClassHandle)) {\n          return false;\n      }\n  \n      var leftClass = this.$$.ptrType.registeredClass;\n      var left = this.$$.ptr;\n      var rightClass = other.$$.ptrType.registeredClass;\n      var right = other.$$.ptr;\n  \n      while (leftClass.baseClass) {\n          left = leftClass.upcast(left);\n          leftClass = leftClass.baseClass;\n      }\n  \n      while (rightClass.baseClass) {\n          right = rightClass.upcast(right);\n          rightClass = rightClass.baseClass;\n      }\n  \n      return leftClass === rightClass && left === right;\n    }\n  \n  \n  function shallowCopyInternalPointer(o) {\n      return {\n          count: o.count,\n          deleteScheduled: o.deleteScheduled,\n          preservePointerOnDelete: o.preservePointerOnDelete,\n          ptr: o.ptr,\n          ptrType: o.ptrType,\n          smartPtr: o.smartPtr,\n          smartPtrType: o.smartPtrType,\n      };\n    }\n  \n  function throwInstanceAlreadyDeleted(obj) {\n      function getInstanceTypeName(handle) {\n        return handle.$$.ptrType.registeredClass.name;\n      }\n      throwBindingError(getInstanceTypeName(obj) + ' instance already deleted');\n    }\n  \n  \n  var finalizationGroup=false;\n  \n  function detachFinalizer(handle) {}\n  \n  \n  function runDestructor($$) {\n      if ($$.smartPtr) {\n          $$.smartPtrType.rawDestructor($$.smartPtr);\n      } else {\n          $$.ptrType.registeredClass.rawDestructor($$.ptr);\n      }\n    }function releaseClassHandle($$) {\n      $$.count.value -= 1;\n      var toDelete = 0 === $$.count.value;\n      if (toDelete) {\n          runDestructor($$);\n      }\n    }function attachFinalizer(handle) {\n      if ('undefined' === typeof FinalizationGroup) {\n          attachFinalizer = function (handle) { return handle; };\n          return handle;\n      }\n      // If the running environment has a FinalizationGroup (see\n      // https://github.com/tc39/proposal-weakrefs), then attach finalizers\n      // for class handles.  We check for the presence of FinalizationGroup\n      // at run-time, not build-time.\n      finalizationGroup = new FinalizationGroup(function (iter) {\n          for (var result = iter.next(); !result.done; result = iter.next()) {\n              var $$ = result.value;\n              if (!$$.ptr) {\n                  console.warn('object already deleted: ' + $$.ptr);\n              } else {\n                  releaseClassHandle($$);\n              }\n          }\n      });\n      attachFinalizer = function(handle) {\n          finalizationGroup.register(handle, handle.$$, handle.$$);\n          return handle;\n      };\n      detachFinalizer = function(handle) {\n          finalizationGroup.unregister(handle.$$);\n      };\n      return attachFinalizer(handle);\n    }function ClassHandle_clone() {\n      if (!this.$$.ptr) {\n          throwInstanceAlreadyDeleted(this);\n      }\n  \n      if (this.$$.preservePointerOnDelete) {\n          this.$$.count.value += 1;\n          return this;\n      } else {\n          var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\n              $$: {\n                  value: shallowCopyInternalPointer(this.$$),\n              }\n          }));\n  \n          clone.$$.count.value += 1;\n          clone.$$.deleteScheduled = false;\n          return clone;\n      }\n    }\n  \n  function ClassHandle_delete() {\n      if (!this.$$.ptr) {\n          throwInstanceAlreadyDeleted(this);\n      }\n  \n      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n          throwBindingError('Object already scheduled for deletion');\n      }\n  \n      detachFinalizer(this);\n      releaseClassHandle(this.$$);\n  \n      if (!this.$$.preservePointerOnDelete) {\n          this.$$.smartPtr = undefined;\n          this.$$.ptr = undefined;\n      }\n    }\n  \n  function ClassHandle_isDeleted() {\n      return !this.$$.ptr;\n    }\n  \n  \n  var delayFunction=undefined;\n  \n  var deletionQueue=[];\n  \n  function flushPendingDeletes() {\n      while (deletionQueue.length) {\n          var obj = deletionQueue.pop();\n          obj.$$.deleteScheduled = false;\n          obj['delete']();\n      }\n    }function ClassHandle_deleteLater() {\n      if (!this.$$.ptr) {\n          throwInstanceAlreadyDeleted(this);\n      }\n      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n          throwBindingError('Object already scheduled for deletion');\n      }\n      deletionQueue.push(this);\n      if (deletionQueue.length === 1 && delayFunction) {\n          delayFunction(flushPendingDeletes);\n      }\n      this.$$.deleteScheduled = true;\n      return this;\n    }function init_ClassHandle() {\n      ClassHandle.prototype['isAliasOf'] = ClassHandle_isAliasOf;\n      ClassHandle.prototype['clone'] = ClassHandle_clone;\n      ClassHandle.prototype['delete'] = ClassHandle_delete;\n      ClassHandle.prototype['isDeleted'] = ClassHandle_isDeleted;\n      ClassHandle.prototype['deleteLater'] = ClassHandle_deleteLater;\n    }function ClassHandle() {\n    }\n  \n  var registeredPointers={};\n  \n  \n  function ensureOverloadTable(proto, methodName, humanName) {\n      if (undefined === proto[methodName].overloadTable) {\n          var prevFunc = proto[methodName];\n          // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.\n          proto[methodName] = function() {\n              // TODO This check can be removed in -O3 level \"unsafe\" optimizations.\n              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n                  throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n              }\n              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n          };\n          // Move the previous function into the overload table.\n          proto[methodName].overloadTable = [];\n          proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n      }\n    }function exposePublicSymbol(name, value, numArguments) {\n      if (Module.hasOwnProperty(name)) {\n          if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {\n              throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\n          }\n  \n          // We are exposing a function with the same name as an existing function. Create an overload table and a function selector\n          // that routes between the two.\n          ensureOverloadTable(Module, name, name);\n          if (Module.hasOwnProperty(numArguments)) {\n              throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n          }\n          // Add the new function into the overload table.\n          Module[name].overloadTable[numArguments] = value;\n      }\n      else {\n          Module[name] = value;\n          if (undefined !== numArguments) {\n              Module[name].numArguments = numArguments;\n          }\n      }\n    }\n  \n  function RegisteredClass(\n      name,\n      constructor,\n      instancePrototype,\n      rawDestructor,\n      baseClass,\n      getActualType,\n      upcast,\n      downcast\n    ) {\n      this.name = name;\n      this.constructor = constructor;\n      this.instancePrototype = instancePrototype;\n      this.rawDestructor = rawDestructor;\n      this.baseClass = baseClass;\n      this.getActualType = getActualType;\n      this.upcast = upcast;\n      this.downcast = downcast;\n      this.pureVirtualFunctions = [];\n    }\n  \n  \n  \n  function upcastPointer(ptr, ptrClass, desiredClass) {\n      while (ptrClass !== desiredClass) {\n          if (!ptrClass.upcast) {\n              throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n          }\n          ptr = ptrClass.upcast(ptr);\n          ptrClass = ptrClass.baseClass;\n      }\n      return ptr;\n    }function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n      if (handle === null) {\n          if (this.isReference) {\n              throwBindingError('null is not a valid ' + this.name);\n          }\n          return 0;\n      }\n  \n      if (!handle.$$) {\n          throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n      }\n      if (!handle.$$.ptr) {\n          throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      return ptr;\n    }\n  \n  function genericPointerToWireType(destructors, handle) {\n      var ptr;\n      if (handle === null) {\n          if (this.isReference) {\n              throwBindingError('null is not a valid ' + this.name);\n          }\n  \n          if (this.isSmartPointer) {\n              ptr = this.rawConstructor();\n              if (destructors !== null) {\n                  destructors.push(this.rawDestructor, ptr);\n              }\n              return ptr;\n          } else {\n              return 0;\n          }\n      }\n  \n      if (!handle.$$) {\n          throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n      }\n      if (!handle.$$.ptr) {\n          throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);\n      }\n      if (!this.isConst && handle.$$.ptrType.isConst) {\n          throwBindingError('Cannot convert argument of type ' + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + ' to parameter type ' + this.name);\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n  \n      if (this.isSmartPointer) {\n          // TODO: this is not strictly true\n          // We could support BY_EMVAL conversions from raw pointers to smart pointers\n          // because the smart pointer can hold a reference to the handle\n          if (undefined === handle.$$.smartPtr) {\n              throwBindingError('Passing raw pointer to smart pointer is illegal');\n          }\n  \n          switch (this.sharingPolicy) {\n              case 0: // NONE\n                  // no upcasting\n                  if (handle.$$.smartPtrType === this) {\n                      ptr = handle.$$.smartPtr;\n                  } else {\n                      throwBindingError('Cannot convert argument of type ' + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + ' to parameter type ' + this.name);\n                  }\n                  break;\n  \n              case 1: // INTRUSIVE\n                  ptr = handle.$$.smartPtr;\n                  break;\n  \n              case 2: // BY_EMVAL\n                  if (handle.$$.smartPtrType === this) {\n                      ptr = handle.$$.smartPtr;\n                  } else {\n                      var clonedHandle = handle['clone']();\n                      ptr = this.rawShare(\n                          ptr,\n                          __emval_register(function() {\n                              clonedHandle['delete']();\n                          })\n                      );\n                      if (destructors !== null) {\n                          destructors.push(this.rawDestructor, ptr);\n                      }\n                  }\n                  break;\n  \n              default:\n                  throwBindingError('Unsupporting sharing policy');\n          }\n      }\n      return ptr;\n    }\n  \n  function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n      if (handle === null) {\n          if (this.isReference) {\n              throwBindingError('null is not a valid ' + this.name);\n          }\n          return 0;\n      }\n  \n      if (!handle.$$) {\n          throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n      }\n      if (!handle.$$.ptr) {\n          throwBindingError('Cannot pass deleted object as a pointer of type ' + this.name);\n      }\n      if (handle.$$.ptrType.isConst) {\n          throwBindingError('Cannot convert argument of type ' + handle.$$.ptrType.name + ' to parameter type ' + this.name);\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      return ptr;\n    }\n  \n  \n  function simpleReadValueFromPointer(pointer) {\n      return this['fromWireType'](HEAPU32[pointer >> 2]);\n    }\n  \n  function RegisteredPointer_getPointee(ptr) {\n      if (this.rawGetPointee) {\n          ptr = this.rawGetPointee(ptr);\n      }\n      return ptr;\n    }\n  \n  function RegisteredPointer_destructor(ptr) {\n      if (this.rawDestructor) {\n          this.rawDestructor(ptr);\n      }\n    }\n  \n  function RegisteredPointer_deleteObject(handle) {\n      if (handle !== null) {\n          handle['delete']();\n      }\n    }\n  \n  \n  function downcastPointer(ptr, ptrClass, desiredClass) {\n      if (ptrClass === desiredClass) {\n          return ptr;\n      }\n      if (undefined === desiredClass.baseClass) {\n          return null; // no conversion\n      }\n  \n      var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n      if (rv === null) {\n          return null;\n      }\n      return desiredClass.downcast(rv);\n    }\n  \n  \n  \n  \n  function getInheritedInstanceCount() {\n      return Object.keys(registeredInstances).length;\n    }\n  \n  function getLiveInheritedInstances() {\n      var rv = [];\n      for (var k in registeredInstances) {\n          if (registeredInstances.hasOwnProperty(k)) {\n              rv.push(registeredInstances[k]);\n          }\n      }\n      return rv;\n    }\n  \n  function setDelayFunction(fn) {\n      delayFunction = fn;\n      if (deletionQueue.length && delayFunction) {\n          delayFunction(flushPendingDeletes);\n      }\n    }function init_embind() {\n      Module['getInheritedInstanceCount'] = getInheritedInstanceCount;\n      Module['getLiveInheritedInstances'] = getLiveInheritedInstances;\n      Module['flushPendingDeletes'] = flushPendingDeletes;\n      Module['setDelayFunction'] = setDelayFunction;\n    }var registeredInstances={};\n  \n  function getBasestPointer(class_, ptr) {\n      if (ptr === undefined) {\n          throwBindingError('ptr should not be undefined');\n      }\n      while (class_.baseClass) {\n          ptr = class_.upcast(ptr);\n          class_ = class_.baseClass;\n      }\n      return ptr;\n    }function getInheritedInstance(class_, ptr) {\n      ptr = getBasestPointer(class_, ptr);\n      return registeredInstances[ptr];\n    }\n  \n  function makeClassHandle(prototype, record) {\n      if (!record.ptrType || !record.ptr) {\n          throwInternalError('makeClassHandle requires ptr and ptrType');\n      }\n      var hasSmartPtrType = !!record.smartPtrType;\n      var hasSmartPtr = !!record.smartPtr;\n      if (hasSmartPtrType !== hasSmartPtr) {\n          throwInternalError('Both smartPtrType and smartPtr must be specified');\n      }\n      record.count = { value: 1 };\n      return attachFinalizer(Object.create(prototype, {\n          $$: {\n              value: record,\n          },\n      }));\n    }function RegisteredPointer_fromWireType(ptr) {\n      // ptr is a raw pointer (or a raw smartpointer)\n  \n      // rawPointer is a maybe-null raw pointer\n      var rawPointer = this.getPointee(ptr);\n      if (!rawPointer) {\n          this.destructor(ptr);\n          return null;\n      }\n  \n      var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n      if (undefined !== registeredInstance) {\n          // JS object has been neutered, time to repopulate it\n          if (0 === registeredInstance.$$.count.value) {\n              registeredInstance.$$.ptr = rawPointer;\n              registeredInstance.$$.smartPtr = ptr;\n              return registeredInstance['clone']();\n          } else {\n              // else, just increment reference count on existing object\n              // it already has a reference to the smart pointer\n              var rv = registeredInstance['clone']();\n              this.destructor(ptr);\n              return rv;\n          }\n      }\n  \n      function makeDefaultHandle() {\n          if (this.isSmartPointer) {\n              return makeClassHandle(this.registeredClass.instancePrototype, {\n                  ptrType: this.pointeeType,\n                  ptr: rawPointer,\n                  smartPtrType: this,\n                  smartPtr: ptr,\n              });\n          } else {\n              return makeClassHandle(this.registeredClass.instancePrototype, {\n                  ptrType: this,\n                  ptr: ptr,\n              });\n          }\n      }\n  \n      var actualType = this.registeredClass.getActualType(rawPointer);\n      var registeredPointerRecord = registeredPointers[actualType];\n      if (!registeredPointerRecord) {\n          return makeDefaultHandle.call(this);\n      }\n  \n      var toType;\n      if (this.isConst) {\n          toType = registeredPointerRecord.constPointerType;\n      } else {\n          toType = registeredPointerRecord.pointerType;\n      }\n      var dp = downcastPointer(\n          rawPointer,\n          this.registeredClass,\n          toType.registeredClass);\n      if (dp === null) {\n          return makeDefaultHandle.call(this);\n      }\n      if (this.isSmartPointer) {\n          return makeClassHandle(toType.registeredClass.instancePrototype, {\n              ptrType: toType,\n              ptr: dp,\n              smartPtrType: this,\n              smartPtr: ptr,\n          });\n      } else {\n          return makeClassHandle(toType.registeredClass.instancePrototype, {\n              ptrType: toType,\n              ptr: dp,\n          });\n      }\n    }function init_RegisteredPointer() {\n      RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n      RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n      RegisteredPointer.prototype['argPackAdvance'] = 8;\n      RegisteredPointer.prototype['readValueFromPointer'] = simpleReadValueFromPointer;\n      RegisteredPointer.prototype['deleteObject'] = RegisteredPointer_deleteObject;\n      RegisteredPointer.prototype['fromWireType'] = RegisteredPointer_fromWireType;\n    }function RegisteredPointer(\n      name,\n      registeredClass,\n      isReference,\n      isConst,\n  \n      // smart pointer properties\n      isSmartPointer,\n      pointeeType,\n      sharingPolicy,\n      rawGetPointee,\n      rawConstructor,\n      rawShare,\n      rawDestructor\n    ) {\n      this.name = name;\n      this.registeredClass = registeredClass;\n      this.isReference = isReference;\n      this.isConst = isConst;\n  \n      // smart pointer properties\n      this.isSmartPointer = isSmartPointer;\n      this.pointeeType = pointeeType;\n      this.sharingPolicy = sharingPolicy;\n      this.rawGetPointee = rawGetPointee;\n      this.rawConstructor = rawConstructor;\n      this.rawShare = rawShare;\n      this.rawDestructor = rawDestructor;\n  \n      if (!isSmartPointer && registeredClass.baseClass === undefined) {\n          if (isConst) {\n              this['toWireType'] = constNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n          } else {\n              this['toWireType'] = nonConstNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n          }\n      } else {\n          this['toWireType'] = genericPointerToWireType;\n          // Here we must leave this.destructorFunction undefined, since whether genericPointerToWireType returns\n          // a pointer that needs to be freed up is runtime-dependent, and cannot be evaluated at registration time.\n          // TODO: Create an alternative mechanism that allows removing the use of var destructors = []; array in\n          //       craftInvokerFunction altogether.\n      }\n    }\n  \n  function replacePublicSymbol(name, value, numArguments) {\n      if (!Module.hasOwnProperty(name)) {\n          throwInternalError('Replacing nonexistant public symbol');\n      }\n      // If there's an overload table for this symbol, replace the symbol in the overload table instead.\n      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n          Module[name].overloadTable[numArguments] = value;\n      }\n      else {\n          Module[name] = value;\n          Module[name].argCount = numArguments;\n      }\n    }\n  \n  function embind__requireFunction(signature, rawFunction) {\n      signature = readLatin1String(signature);\n  \n      function makeDynCaller(dynCall) {\n          var args = [];\n          for (var i = 1; i < signature.length; ++i) {\n              args.push('a' + i);\n          }\n  \n          var name = 'dynCall_' + signature + '_' + rawFunction;\n          var body = 'return function ' + name + '(' + args.join(', ') + ') {\\n';\n          body    += '    return dynCall(rawFunction' + (args.length ? ', ' : '') + args.join(', ') + ');\\n';\n          body    += '};\\n';\n  \n          return (new Function('dynCall', 'rawFunction', body))(dynCall, rawFunction);\n      }\n  \n      var fp;\n      if (Module['FUNCTION_TABLE_' + signature] !== undefined) {\n          fp = Module['FUNCTION_TABLE_' + signature][rawFunction];\n      } else if (typeof FUNCTION_TABLE !== \"undefined\") {\n          fp = FUNCTION_TABLE[rawFunction];\n      } else {\n          // asm.js does not give direct access to the function tables,\n          // and thus we must go through the dynCall interface which allows\n          // calling into a signature's function table by pointer value.\n          //\n          // https://github.com/dherman/asm.js/issues/83\n          //\n          // This has three main penalties:\n          // - dynCall is another function call in the path from JavaScript to C++.\n          // - JITs may not predict through the function table indirection at runtime.\n          var dc = Module['dynCall_' + signature];\n          if (dc === undefined) {\n              // We will always enter this branch if the signature\n              // contains 'f' and PRECISE_F32 is not enabled.\n              //\n              // Try again, replacing 'f' with 'd'.\n              dc = Module['dynCall_' + signature.replace(/f/g, 'd')];\n              if (dc === undefined) {\n                  throwBindingError(\"No dynCall invoker for signature: \" + signature);\n              }\n          }\n          fp = makeDynCaller(dc);\n      }\n  \n      if (typeof fp !== \"function\") {\n          throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n      }\n      return fp;\n    }\n  \n  \n  var UnboundTypeError=undefined;\n  \n  function getTypeName(type) {\n      var ptr = ___getTypeName(type);\n      var rv = readLatin1String(ptr);\n      _free(ptr);\n      return rv;\n    }function throwUnboundTypeError(message, types) {\n      var unboundTypes = [];\n      var seen = {};\n      function visit(type) {\n          if (seen[type]) {\n              return;\n          }\n          if (registeredTypes[type]) {\n              return;\n          }\n          if (typeDependencies[type]) {\n              typeDependencies[type].forEach(visit);\n              return;\n          }\n          unboundTypes.push(type);\n          seen[type] = true;\n      }\n      types.forEach(visit);\n  \n      throw new UnboundTypeError(message + ': ' + unboundTypes.map(getTypeName).join([', ']));\n    }function __embind_register_class(\n      rawType,\n      rawPointerType,\n      rawConstPointerType,\n      baseClassRawType,\n      getActualTypeSignature,\n      getActualType,\n      upcastSignature,\n      upcast,\n      downcastSignature,\n      downcast,\n      name,\n      destructorSignature,\n      rawDestructor\n    ) {\n      name = readLatin1String(name);\n      getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n      if (upcast) {\n          upcast = embind__requireFunction(upcastSignature, upcast);\n      }\n      if (downcast) {\n          downcast = embind__requireFunction(downcastSignature, downcast);\n      }\n      rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n      var legalFunctionName = makeLegalFunctionName(name);\n  \n      exposePublicSymbol(legalFunctionName, function() {\n          // this code cannot run if baseClassRawType is zero\n          throwUnboundTypeError('Cannot construct ' + name + ' due to unbound types', [baseClassRawType]);\n      });\n  \n      whenDependentTypesAreResolved(\n          [rawType, rawPointerType, rawConstPointerType],\n          baseClassRawType ? [baseClassRawType] : [],\n          function(base) {\n              base = base[0];\n  \n              var baseClass;\n              var basePrototype;\n              if (baseClassRawType) {\n                  baseClass = base.registeredClass;\n                  basePrototype = baseClass.instancePrototype;\n              } else {\n                  basePrototype = ClassHandle.prototype;\n              }\n  \n              var constructor = createNamedFunction(legalFunctionName, function() {\n                  if (Object.getPrototypeOf(this) !== instancePrototype) {\n                      throw new BindingError(\"Use 'new' to construct \" + name);\n                  }\n                  if (undefined === registeredClass.constructor_body) {\n                      throw new BindingError(name + \" has no accessible constructor\");\n                  }\n                  var body = registeredClass.constructor_body[arguments.length];\n                  if (undefined === body) {\n                      throw new BindingError(\"Tried to invoke ctor of \" + name + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n                  }\n                  return body.apply(this, arguments);\n              });\n  \n              var instancePrototype = Object.create(basePrototype, {\n                  constructor: { value: constructor },\n              });\n  \n              constructor.prototype = instancePrototype;\n  \n              var registeredClass = new RegisteredClass(\n                  name,\n                  constructor,\n                  instancePrototype,\n                  rawDestructor,\n                  baseClass,\n                  getActualType,\n                  upcast,\n                  downcast);\n  \n              var referenceConverter = new RegisteredPointer(\n                  name,\n                  registeredClass,\n                  true,\n                  false,\n                  false);\n  \n              var pointerConverter = new RegisteredPointer(\n                  name + '*',\n                  registeredClass,\n                  false,\n                  false,\n                  false);\n  \n              var constPointerConverter = new RegisteredPointer(\n                  name + ' const*',\n                  registeredClass,\n                  false,\n                  true,\n                  false);\n  \n              registeredPointers[rawType] = {\n                  pointerType: pointerConverter,\n                  constPointerType: constPointerConverter\n              };\n  \n              replacePublicSymbol(legalFunctionName, constructor);\n  \n              return [referenceConverter, pointerConverter, constPointerConverter];\n          }\n      );\n    }\n\n  \n  function heap32VectorToArray(count, firstElement) {\n      var array = [];\n      for (var i = 0; i < count; i++) {\n          array.push(HEAP32[(firstElement >> 2) + i]);\n      }\n      return array;\n    }\n  \n  function runDestructors(destructors) {\n      while (destructors.length) {\n          var ptr = destructors.pop();\n          var del = destructors.pop();\n          del(ptr);\n      }\n    }function __embind_register_class_constructor(\n      rawClassType,\n      argCount,\n      rawArgTypesAddr,\n      invokerSignature,\n      invoker,\n      rawConstructor\n    ) {\n      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      invoker = embind__requireFunction(invokerSignature, invoker);\n  \n      whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n          classType = classType[0];\n          var humanName = 'constructor ' + classType.name;\n  \n          if (undefined === classType.registeredClass.constructor_body) {\n              classType.registeredClass.constructor_body = [];\n          }\n          if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\n              throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount-1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n          }\n          classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {\n              throwUnboundTypeError('Cannot construct ' + classType.name + ' due to unbound types', rawArgTypes);\n          };\n  \n          whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {\n                  if (arguments.length !== argCount - 1) {\n                      throwBindingError(humanName + ' called with ' + arguments.length + ' arguments, expected ' + (argCount-1));\n                  }\n                  var destructors = [];\n                  var args = new Array(argCount);\n                  args[0] = rawConstructor;\n                  for (var i = 1; i < argCount; ++i) {\n                      args[i] = argTypes[i]['toWireType'](destructors, arguments[i - 1]);\n                  }\n  \n                  var ptr = invoker.apply(null, args);\n                  runDestructors(destructors);\n  \n                  return argTypes[0]['fromWireType'](ptr);\n              };\n              return [];\n          });\n          return [];\n      });\n    }\n\n  \n  \n  function new_(constructor, argumentList) {\n      if (!(constructor instanceof Function)) {\n          throw new TypeError('new_ called with constructor type ' + typeof(constructor) + \" which is not a function\");\n      }\n  \n      /*\n       * Previously, the following line was just:\n  \n       function dummy() {};\n  \n       * Unfortunately, Chrome was preserving 'dummy' as the object's name, even though at creation, the 'dummy' has the\n       * correct constructor name.  Thus, objects created with IMVU.new would show up in the debugger as 'dummy', which\n       * isn't very helpful.  Using IMVU.createNamedFunction addresses the issue.  Doublely-unfortunately, there's no way\n       * to write a test for this behavior.  -NRD 2013.02.22\n       */\n      var dummy = createNamedFunction(constructor.name || 'unknownFunctionName', function(){});\n      dummy.prototype = constructor.prototype;\n      var obj = new dummy;\n  \n      var r = constructor.apply(obj, argumentList);\n      return (r instanceof Object) ? r : obj;\n    }function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n      // humanName: a human-readable string name for the function to be generated.\n      // argTypes: An array that contains the embind type objects for all types in the function signature.\n      //    argTypes[0] is the type object for the function return value.\n      //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.\n      //    argTypes[2...] are the actual function parameters.\n      // classType: The embind type object for the class to be bound, or null if this is not a method of a class.\n      // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.\n      // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.\n      var argCount = argTypes.length;\n  \n      if (argCount < 2) {\n          throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n      }\n  \n      var isClassMethodFunc = (argTypes[1] !== null && classType !== null);\n  \n      // Free functions with signature \"void function()\" do not need an invoker that marshalls between wire types.\n  // TODO: This omits argument count check - enable only at -O3 or similar.\n  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == \"void\" && !isClassMethodFunc) {\n  //       return FUNCTION_TABLE[fn];\n  //    }\n  \n  \n      // Determine if we need to use a dynamic stack to store the destructors for the function parameters.\n      // TODO: Remove this completely once all function invokers are being dynamically generated.\n      var needsDestructorStack = false;\n  \n      for(var i = 1; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here.\n          if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) { // The type does not define a destructor function - must use dynamic stack\n              needsDestructorStack = true;\n              break;\n          }\n      }\n  \n      var returns = (argTypes[0].name !== \"void\");\n  \n      var argsList = \"\";\n      var argsListWired = \"\";\n      for(var i = 0; i < argCount - 2; ++i) {\n          argsList += (i!==0?\", \":\"\")+\"arg\"+i;\n          argsListWired += (i!==0?\", \":\"\")+\"arg\"+i+\"Wired\";\n      }\n  \n      var invokerFnBody =\n          \"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\" +\n          \"if (arguments.length !== \"+(argCount - 2)+\") {\\n\" +\n              \"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount - 2)+\" args!');\\n\" +\n          \"}\\n\";\n  \n  \n      if (needsDestructorStack) {\n          invokerFnBody +=\n              \"var destructors = [];\\n\";\n      }\n  \n      var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n      var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n  \n  \n      if (isClassMethodFunc) {\n          invokerFnBody += \"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\";\n      }\n  \n      for(var i = 0; i < argCount - 2; ++i) {\n          invokerFnBody += \"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";\n          args1.push(\"argType\"+i);\n          args2.push(argTypes[i+2]);\n      }\n  \n      if (isClassMethodFunc) {\n          argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n      }\n  \n      invokerFnBody +=\n          (returns?\"var rv = \":\"\") + \"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";\n  \n      if (needsDestructorStack) {\n          invokerFnBody += \"runDestructors(destructors);\\n\";\n      } else {\n          for(var i = isClassMethodFunc?1:2; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.\n              var paramName = (i === 1 ? \"thisWired\" : (\"arg\"+(i - 2)+\"Wired\"));\n              if (argTypes[i].destructorFunction !== null) {\n                  invokerFnBody += paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";\n                  args1.push(paramName+\"_dtor\");\n                  args2.push(argTypes[i].destructorFunction);\n              }\n          }\n      }\n  \n      if (returns) {\n          invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" +\n                           \"return ret;\\n\";\n      } else {\n      }\n      invokerFnBody += \"}\\n\";\n  \n      args1.push(invokerFnBody);\n  \n      var invokerFunction = new_(Function, args1).apply(null, args2);\n      return invokerFunction;\n    }function __embind_register_class_function(\n      rawClassType,\n      methodName,\n      argCount,\n      rawArgTypesAddr, // [ReturnType, ThisType, Args...]\n      invokerSignature,\n      rawInvoker,\n      context,\n      isPureVirtual\n    ) {\n      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      methodName = readLatin1String(methodName);\n      rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n  \n      whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n          classType = classType[0];\n          var humanName = classType.name + '.' + methodName;\n  \n          if (isPureVirtual) {\n              classType.registeredClass.pureVirtualFunctions.push(methodName);\n          }\n  \n          function unboundTypesHandler() {\n              throwUnboundTypeError('Cannot call ' + humanName + ' due to unbound types', rawArgTypes);\n          }\n  \n          var proto = classType.registeredClass.instancePrototype;\n          var method = proto[methodName];\n          if (undefined === method || (undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2)) {\n              // This is the first overload to be registered, OR we are replacing a function in the base class with a function in the derived class.\n              unboundTypesHandler.argCount = argCount - 2;\n              unboundTypesHandler.className = classType.name;\n              proto[methodName] = unboundTypesHandler;\n          } else {\n              // There was an existing function with the same name registered. Set up a function overload routing table.\n              ensureOverloadTable(proto, methodName, humanName);\n              proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n          }\n  \n          whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n  \n              var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n  \n              // Replace the initial unbound-handler-stub function with the appropriate member function, now that all types\n              // are resolved. If multiple overloads are registered for this function, the function goes into an overload table.\n              if (undefined === proto[methodName].overloadTable) {\n                  // Set argCount in case an overload is registered later\n                  memberFunction.argCount = argCount - 2;\n                  proto[methodName] = memberFunction;\n              } else {\n                  proto[methodName].overloadTable[argCount - 2] = memberFunction;\n              }\n  \n              return [];\n          });\n          return [];\n      });\n    }\n\n  \n  \n  var emval_free_list=[];\n  \n  var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle) {\n      if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {\n          emval_handle_array[handle] = undefined;\n          emval_free_list.push(handle);\n      }\n    }\n  \n  \n  \n  function count_emval_handles() {\n      var count = 0;\n      for (var i = 5; i < emval_handle_array.length; ++i) {\n          if (emval_handle_array[i] !== undefined) {\n              ++count;\n          }\n      }\n      return count;\n    }\n  \n  function get_first_emval() {\n      for (var i = 5; i < emval_handle_array.length; ++i) {\n          if (emval_handle_array[i] !== undefined) {\n              return emval_handle_array[i];\n          }\n      }\n      return null;\n    }function init_emval() {\n      Module['count_emval_handles'] = count_emval_handles;\n      Module['get_first_emval'] = get_first_emval;\n    }function __emval_register(value) {\n  \n      switch(value){\n        case undefined :{ return 1; }\n        case null :{ return 2; }\n        case true :{ return 3; }\n        case false :{ return 4; }\n        default:{\n          var handle = emval_free_list.length ?\n              emval_free_list.pop() :\n              emval_handle_array.length;\n  \n          emval_handle_array[handle] = {refcount: 1, value: value};\n          return handle;\n          }\n        }\n    }function __embind_register_emval(rawType, name) {\n      name = readLatin1String(name);\n      registerType(rawType, {\n          name: name,\n          'fromWireType': function(handle) {\n              var rv = emval_handle_array[handle].value;\n              __emval_decref(handle);\n              return rv;\n          },\n          'toWireType': function(destructors, value) {\n              return __emval_register(value);\n          },\n          'argPackAdvance': 8,\n          'readValueFromPointer': simpleReadValueFromPointer,\n          destructorFunction: null, // This type does not need a destructor\n  \n          // TODO: do we need a deleteObject here?  write a test where\n          // emval is passed into JS via an interface\n      });\n    }\n\n  \n  function _embind_repr(v) {\n      if (v === null) {\n          return 'null';\n      }\n      var t = typeof v;\n      if (t === 'object' || t === 'array' || t === 'function') {\n          return v.toString();\n      } else {\n          return '' + v;\n      }\n    }\n  \n  function floatReadValueFromPointer(name, shift) {\n      switch (shift) {\n          case 2: return function(pointer) {\n              return this['fromWireType'](HEAPF32[pointer >> 2]);\n          };\n          case 3: return function(pointer) {\n              return this['fromWireType'](HEAPF64[pointer >> 3]);\n          };\n          default:\n              throw new TypeError(\"Unknown float type: \" + name);\n      }\n    }function __embind_register_float(rawType, name, size) {\n      var shift = getShiftFromSize(size);\n      name = readLatin1String(name);\n      registerType(rawType, {\n          name: name,\n          'fromWireType': function(value) {\n              return value;\n          },\n          'toWireType': function(destructors, value) {\n              // todo: Here we have an opportunity for -O3 level \"unsafe\" optimizations: we could\n              // avoid the following if() and assume value is of proper type.\n              if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n                  throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n              }\n              return value;\n          },\n          'argPackAdvance': 8,\n          'readValueFromPointer': floatReadValueFromPointer(name, shift),\n          destructorFunction: null, // This type does not need a destructor\n      });\n    }\n\n  \n  function integerReadValueFromPointer(name, shift, signed) {\n      // integers are quite common, so generate very specialized functions\n      switch (shift) {\n          case 0: return signed ?\n              function readS8FromPointer(pointer) { return HEAP8[pointer]; } :\n              function readU8FromPointer(pointer) { return HEAPU8[pointer]; };\n          case 1: return signed ?\n              function readS16FromPointer(pointer) { return HEAP16[pointer >> 1]; } :\n              function readU16FromPointer(pointer) { return HEAPU16[pointer >> 1]; };\n          case 2: return signed ?\n              function readS32FromPointer(pointer) { return HEAP32[pointer >> 2]; } :\n              function readU32FromPointer(pointer) { return HEAPU32[pointer >> 2]; };\n          default:\n              throw new TypeError(\"Unknown integer type: \" + name);\n      }\n    }function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n      name = readLatin1String(name);\n      if (maxRange === -1) { // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come out as 'i32 -1'. Always treat those as max u32.\n          maxRange = 4294967295;\n      }\n  \n      var shift = getShiftFromSize(size);\n  \n      var fromWireType = function(value) {\n          return value;\n      };\n  \n      if (minRange === 0) {\n          var bitshift = 32 - 8*size;\n          fromWireType = function(value) {\n              return (value << bitshift) >>> bitshift;\n          };\n      }\n  \n      var isUnsignedType = (name.indexOf('unsigned') != -1);\n  \n      registerType(primitiveType, {\n          name: name,\n          'fromWireType': fromWireType,\n          'toWireType': function(destructors, value) {\n              // todo: Here we have an opportunity for -O3 level \"unsafe\" optimizations: we could\n              // avoid the following two if()s and assume value is of proper type.\n              if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n                  throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n              }\n              if (value < minRange || value > maxRange) {\n                  throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + ', ' + maxRange + ']!');\n              }\n              return isUnsignedType ? (value >>> 0) : (value | 0);\n          },\n          'argPackAdvance': 8,\n          'readValueFromPointer': integerReadValueFromPointer(name, shift, minRange !== 0),\n          destructorFunction: null, // This type does not need a destructor\n      });\n    }\n\n  function __embind_register_memory_view(rawType, dataTypeIndex, name) {\n      var typeMapping = [\n          Int8Array,\n          Uint8Array,\n          Int16Array,\n          Uint16Array,\n          Int32Array,\n          Uint32Array,\n          Float32Array,\n          Float64Array,\n      ];\n  \n      var TA = typeMapping[dataTypeIndex];\n  \n      function decodeMemoryView(handle) {\n          handle = handle >> 2;\n          var heap = HEAPU32;\n          var size = heap[handle]; // in elements\n          var data = heap[handle + 1]; // byte offset into emscripten heap\n          return new TA(heap['buffer'], data, size);\n      }\n  \n      name = readLatin1String(name);\n      registerType(rawType, {\n          name: name,\n          'fromWireType': decodeMemoryView,\n          'argPackAdvance': 8,\n          'readValueFromPointer': decodeMemoryView,\n      }, {\n          ignoreDuplicateRegistrations: true,\n      });\n    }\n\n  function __embind_register_std_string(rawType, name) {\n      name = readLatin1String(name);\n      var stdStringIsUTF8\n      //process only std::string bindings with UTF8 support, in contrast to e.g. std::basic_string<unsigned char>\n      = (name === \"std::string\");\n  \n      registerType(rawType, {\n          name: name,\n          'fromWireType': function(value) {\n              var length = HEAPU32[value >> 2];\n  \n              var str;\n              if(stdStringIsUTF8) {\n                  //ensure null termination at one-past-end byte if not present yet\n                  var endChar = HEAPU8[value + 4 + length];\n                  var endCharSwap = 0;\n                  if(endChar != 0)\n                  {\n                    endCharSwap = endChar;\n                    HEAPU8[value + 4 + length] = 0;\n                  }\n  \n                  var decodeStartPtr = value + 4;\n                  //looping here to support possible embedded '0' bytes\n                  for (var i = 0; i <= length; ++i) {\n                    var currentBytePtr = value + 4 + i;\n                    if(HEAPU8[currentBytePtr] == 0)\n                    {\n                      var stringSegment = UTF8ToString(decodeStartPtr);\n                      if(str === undefined)\n                        str = stringSegment;\n                      else\n                      {\n                        str += String.fromCharCode(0);\n                        str += stringSegment;\n                      }\n                      decodeStartPtr = currentBytePtr + 1;\n                    }\n                  }\n  \n                  if(endCharSwap != 0)\n                    HEAPU8[value + 4 + length] = endCharSwap;\n              } else {\n                  var a = new Array(length);\n                  for (var i = 0; i < length; ++i) {\n                      a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);\n                  }\n                  str = a.join('');\n              }\n  \n              _free(value);\n              \n              return str;\n          },\n          'toWireType': function(destructors, value) {\n              if (value instanceof ArrayBuffer) {\n                  value = new Uint8Array(value);\n              }\n              \n              var getLength;\n              var valueIsOfTypeString = (typeof value === 'string');\n  \n              if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n                  throwBindingError('Cannot pass non-string to std::string');\n              }\n              if (stdStringIsUTF8 && valueIsOfTypeString) {\n                  getLength = function() {return lengthBytesUTF8(value);};\n              } else {\n                  getLength = function() {return value.length;};\n              }\n              \n              // assumes 4-byte alignment\n              var length = getLength();\n              var ptr = _malloc(4 + length + 1);\n              HEAPU32[ptr >> 2] = length;\n  \n              if (stdStringIsUTF8 && valueIsOfTypeString) {\n                  stringToUTF8(value, ptr + 4, length + 1);\n              } else {\n                  if(valueIsOfTypeString) {\n                      for (var i = 0; i < length; ++i) {\n                          var charCode = value.charCodeAt(i);\n                          if (charCode > 255) {\n                              _free(ptr);\n                              throwBindingError('String has UTF-16 code units that do not fit in 8 bits');\n                          }\n                          HEAPU8[ptr + 4 + i] = charCode;\n                      }\n                  } else {\n                      for (var i = 0; i < length; ++i) {\n                          HEAPU8[ptr + 4 + i] = value[i];\n                      }\n                  }\n              }\n  \n              if (destructors !== null) {\n                  destructors.push(_free, ptr);\n              }\n              return ptr;\n          },\n          'argPackAdvance': 8,\n          'readValueFromPointer': simpleReadValueFromPointer,\n          destructorFunction: function(ptr) { _free(ptr); },\n      });\n    }\n\n  function __embind_register_std_wstring(rawType, charSize, name) {\n      // nb. do not cache HEAPU16 and HEAPU32, they may be destroyed by emscripten_resize_heap().\n      name = readLatin1String(name);\n      var getHeap, shift;\n      if (charSize === 2) {\n          getHeap = function() { return HEAPU16; };\n          shift = 1;\n      } else if (charSize === 4) {\n          getHeap = function() { return HEAPU32; };\n          shift = 2;\n      }\n      registerType(rawType, {\n          name: name,\n          'fromWireType': function(value) {\n              var HEAP = getHeap();\n              var length = HEAPU32[value >> 2];\n              var a = new Array(length);\n              var start = (value + 4) >> shift;\n              for (var i = 0; i < length; ++i) {\n                  a[i] = String.fromCharCode(HEAP[start + i]);\n              }\n              _free(value);\n              return a.join('');\n          },\n          'toWireType': function(destructors, value) {\n              // assumes 4-byte alignment\n              var length = value.length;\n              var ptr = _malloc(4 + length * charSize);\n              var HEAP = getHeap();\n              HEAPU32[ptr >> 2] = length;\n              var start = (ptr + 4) >> shift;\n              for (var i = 0; i < length; ++i) {\n                  HEAP[start + i] = value.charCodeAt(i);\n              }\n              if (destructors !== null) {\n                  destructors.push(_free, ptr);\n              }\n              return ptr;\n          },\n          'argPackAdvance': 8,\n          'readValueFromPointer': simpleReadValueFromPointer,\n          destructorFunction: function(ptr) { _free(ptr); },\n      });\n    }\n\n  function __embind_register_void(rawType, name) {\n      name = readLatin1String(name);\n      registerType(rawType, {\n          isVoid: true, // void return values can be optimized out sometimes\n          name: name,\n          'argPackAdvance': 0,\n          'fromWireType': function() {\n              return undefined;\n          },\n          'toWireType': function(destructors, o) {\n              // TODO: assert if anything else is given?\n              return undefined;\n          },\n      });\n    }\n\n  \n  \n  function requireRegisteredType(rawType, humanName) {\n      var impl = registeredTypes[rawType];\n      if (undefined === impl) {\n          throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n      }\n      return impl;\n    }function __emval_lookupTypes(argCount, argTypes, argWireTypes) {\n      var a = new Array(argCount);\n      for (var i = 0; i < argCount; ++i) {\n          a[i] = requireRegisteredType(\n              HEAP32[(argTypes >> 2) + i],\n              \"parameter \" + i);\n      }\n      return a;\n    }\n  \n  function requireHandle(handle) {\n      if (!handle) {\n          throwBindingError('Cannot use deleted val. handle = ' + handle);\n      }\n      return emval_handle_array[handle].value;\n    }function __emval_call(handle, argCount, argTypes, argv) {\n      handle = requireHandle(handle);\n      var types = __emval_lookupTypes(argCount, argTypes);\n  \n      var args = new Array(argCount);\n      for (var i = 0; i < argCount; ++i) {\n          var type = types[i];\n          args[i] = type['readValueFromPointer'](argv);\n          argv += type['argPackAdvance'];\n      }\n  \n      var rv = handle.apply(undefined, args);\n      return __emval_register(rv);\n    }\n\n\n  function __emval_incref(handle) {\n      if (handle > 4) {\n          emval_handle_array[handle].refcount += 1;\n      }\n    }\n\n  function __emval_take_value(type, argv) {\n      type = requireRegisteredType(type, '_emval_take_value');\n      var v = type['readValueFromPointer'](argv);\n      return __emval_register(v);\n    }\n\n  function _abort() {\n      abort();\n    }\n\n  function _emscripten_get_heap_size() {\n      return HEAP8.length;\n    }\n\n   \n\n  \n  function abortOnCannotGrowMemory(requestedSize) {\n      abort('OOM');\n    }\n  \n  function emscripten_realloc_buffer(size) {\n      try {\n        // round size grow request up to wasm page size (fixed 64KB per spec)\n        wasmMemory.grow((size - buffer.byteLength + 65535) >> 16); // .grow() takes a delta compared to the previous size\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        return 1 /*success*/;\n      } catch(e) {\n      }\n    }function _emscripten_resize_heap(requestedSize) {\n      var oldSize = _emscripten_get_heap_size();\n      // With pthreads, races can happen (another thread might increase the size in between), so return a failure, and let the caller retry.\n  \n  \n      var PAGE_MULTIPLE = 65536;\n      var LIMIT = 2147483648 - PAGE_MULTIPLE; // We can do one page short of 2GB as theoretical maximum.\n  \n      if (requestedSize > LIMIT) {\n        return false;\n      }\n  \n      var MIN_TOTAL_MEMORY = 16777216;\n      var newSize = Math.max(oldSize, MIN_TOTAL_MEMORY); // So the loop below will not be infinite, and minimum asm.js memory size is 16MB.\n  \n      // TODO: see realloc_buffer - for PTHREADS we may want to decrease these jumps\n      while (newSize < requestedSize) { // Keep incrementing the heap size as long as it's less than what is requested.\n        if (newSize <= 536870912) {\n          newSize = alignUp(2 * newSize, PAGE_MULTIPLE); // Simple heuristic: double until 1GB...\n        } else {\n          // ..., but after that, add smaller increments towards 2GB, which we cannot reach\n          newSize = Math.min(alignUp((3 * newSize + 2147483648) / 4, PAGE_MULTIPLE), LIMIT);\n        }\n  \n      }\n  \n  \n  \n      var replacement = emscripten_realloc_buffer(newSize);\n      if (!replacement) {\n        return false;\n      }\n  \n  \n  \n      return true;\n    }\n\n  function _gettimeofday(ptr) {\n      var now = Date.now();\n      HEAP32[((ptr)>>2)]=(now/1000)|0; // seconds\n      HEAP32[(((ptr)+(4))>>2)]=((now % 1000)*1000)|0; // microseconds\n      return 0;\n    }\n\n  \n  function _llvm_log10_f32(x) {\n      return Math.log(x) / Math.LN10; // TODO: Math.log10, when browser support is there\n    }function _llvm_log10_f64(a0\n  /*``*/) {\n  return _llvm_log10_f32(a0);\n  }\n\n  \n   \n\n  function _llvm_trap() {\n      abort('trap!');\n    }\n\n  \n   \n  \n   \n  \n   function _longjmp(env, value) {\n      _setThrew(env, value || 1);\n      throw 'longjmp';\n    }\n\n  \n  function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);\n    }\n  \n   \n\n   \n\n   \n\n  function _pthread_cond_destroy() { return 0; }\n\n  function _pthread_cond_init() { return 0; }\n\n  function _pthread_create() {\n      return 6;\n    }\n\n  function _pthread_join() {}\n\n\n\n  function _time(ptr) {\n      var ret = (Date.now()/1000)|0;\n      if (ptr) {\n        HEAP32[((ptr)>>2)]=ret;\n      }\n      return ret;\n    }\nembind_init_charCodes();\nBindingError = Module['BindingError'] = extendError(Error, 'BindingError');;\nInternalError = Module['InternalError'] = extendError(Error, 'InternalError');;\ninit_ClassHandle();\ninit_RegisteredPointer();\ninit_embind();;\nUnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');;\ninit_emval();;\nvar ASSERTIONS = false;\n\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\n// Emscripten is available under two separate licenses, the MIT license and the\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\n// found in the LICENSE file.\n\n/** @type {function(string, boolean=, number=)} */\nfunction intArrayFromString(stringy, dontAddNull, length) {\n  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\n  var u8array = new Array(len);\n  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n  if (dontAddNull) u8array.length = numBytesWritten;\n  return u8array;\n}\n\nfunction intArrayToString(array) {\n  var ret = [];\n  for (var i = 0; i < array.length; i++) {\n    var chr = array[i];\n    if (chr > 0xFF) {\n      if (ASSERTIONS) {\n        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');\n      }\n      chr &= 0xFF;\n    }\n    ret.push(String.fromCharCode(chr));\n  }\n  return ret.join('');\n}\n\n\n// ASM_LIBRARY EXTERN PRIMITIVES: Math_floor,Math_ceil,Int8Array,Int32Array\n\n\nfunction invoke_dd(index,a1) {\n  var sp = stackSave();\n  try {\n    return dynCall_dd(index,a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_i(index) {\n  var sp = stackSave();\n  try {\n    return dynCall_i(index);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_ii(index,a1) {\n  var sp = stackSave();\n  try {\n    return dynCall_ii(index,a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    return dynCall_iii(index,a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiijj(index,a1,a2,a3,a4,a5,a6,a7) {\n  var sp = stackSave();\n  try {\n    return dynCall_iiiijj(index,a1,a2,a3,a4,a5,a6,a7);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vi(index,a1) {\n  var sp = stackSave();\n  try {\n    dynCall_vi(index,a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    dynCall_vii(index,a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viii(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    dynCall_viii(index,a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiii(index,a1,a2,a3,a4) {\n  var sp = stackSave();\n  try {\n    dynCall_viiii(index,a1,a2,a3,a4);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiii(index,a1,a2,a3,a4,a5) {\n  var sp = stackSave();\n  try {\n    dynCall_viiiii(index,a1,a2,a3,a4,a5);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0 && e !== 'longjmp') throw e;\n    _setThrew(1, 0);\n  }\n}\n\nvar asmGlobalArg = {};\n\nvar asmLibraryArg = { \"ClassHandle\": ClassHandle, \"ClassHandle_clone\": ClassHandle_clone, \"ClassHandle_delete\": ClassHandle_delete, \"ClassHandle_deleteLater\": ClassHandle_deleteLater, \"ClassHandle_isAliasOf\": ClassHandle_isAliasOf, \"ClassHandle_isDeleted\": ClassHandle_isDeleted, \"RegisteredClass\": RegisteredClass, \"RegisteredPointer\": RegisteredPointer, \"RegisteredPointer_deleteObject\": RegisteredPointer_deleteObject, \"RegisteredPointer_destructor\": RegisteredPointer_destructor, \"RegisteredPointer_fromWireType\": RegisteredPointer_fromWireType, \"RegisteredPointer_getPointee\": RegisteredPointer_getPointee, \"___cxa_allocate_exception\": ___cxa_allocate_exception, \"___cxa_begin_catch\": ___cxa_begin_catch, \"___cxa_throw\": ___cxa_throw, \"___exception_addRef\": ___exception_addRef, \"___exception_deAdjust\": ___exception_deAdjust, \"___gxx_personality_v0\": ___gxx_personality_v0, \"___lock\": ___lock, \"___setErrNo\": ___setErrNo, \"___syscall221\": ___syscall221, \"___syscall5\": ___syscall5, \"___syscall54\": ___syscall54, \"___unlock\": ___unlock, \"___wasi_fd_close\": ___wasi_fd_close, \"___wasi_fd_read\": ___wasi_fd_read, \"___wasi_fd_seek\": ___wasi_fd_seek, \"___wasi_fd_write\": ___wasi_fd_write, \"__embind_register_bool\": __embind_register_bool, \"__embind_register_class\": __embind_register_class, \"__embind_register_class_constructor\": __embind_register_class_constructor, \"__embind_register_class_function\": __embind_register_class_function, \"__embind_register_emval\": __embind_register_emval, \"__embind_register_float\": __embind_register_float, \"__embind_register_integer\": __embind_register_integer, \"__embind_register_memory_view\": __embind_register_memory_view, \"__embind_register_std_string\": __embind_register_std_string, \"__embind_register_std_wstring\": __embind_register_std_wstring, \"__embind_register_void\": __embind_register_void, \"__emval_call\": __emval_call, \"__emval_decref\": __emval_decref, \"__emval_incref\": __emval_incref, \"__emval_lookupTypes\": __emval_lookupTypes, \"__emval_register\": __emval_register, \"__emval_take_value\": __emval_take_value, \"__memory_base\": 1024, \"__table_base\": 0, \"_abort\": _abort, \"_embind_repr\": _embind_repr, \"_emscripten_get_heap_size\": _emscripten_get_heap_size, \"_emscripten_memcpy_big\": _emscripten_memcpy_big, \"_emscripten_resize_heap\": _emscripten_resize_heap, \"_fd_close\": _fd_close, \"_fd_read\": _fd_read, \"_fd_seek\": _fd_seek, \"_fd_write\": _fd_write, \"_gettimeofday\": _gettimeofday, \"_llvm_log10_f32\": _llvm_log10_f32, \"_llvm_log10_f64\": _llvm_log10_f64, \"_llvm_trap\": _llvm_trap, \"_longjmp\": _longjmp, \"_pthread_cond_destroy\": _pthread_cond_destroy, \"_pthread_cond_init\": _pthread_cond_init, \"_pthread_create\": _pthread_create, \"_pthread_join\": _pthread_join, \"_time\": _time, \"abort\": abort, \"abortOnCannotGrowMemory\": abortOnCannotGrowMemory, \"attachFinalizer\": attachFinalizer, \"constNoSmartPtrRawPointerToWireType\": constNoSmartPtrRawPointerToWireType, \"count_emval_handles\": count_emval_handles, \"craftInvokerFunction\": craftInvokerFunction, \"createNamedFunction\": createNamedFunction, \"demangle\": demangle, \"demangleAll\": demangleAll, \"detachFinalizer\": detachFinalizer, \"downcastPointer\": downcastPointer, \"embind__requireFunction\": embind__requireFunction, \"embind_init_charCodes\": embind_init_charCodes, \"emscripten_realloc_buffer\": emscripten_realloc_buffer, \"ensureOverloadTable\": ensureOverloadTable, \"exposePublicSymbol\": exposePublicSymbol, \"extendError\": extendError, \"floatReadValueFromPointer\": floatReadValueFromPointer, \"flushPendingDeletes\": flushPendingDeletes, \"flush_NO_FILESYSTEM\": flush_NO_FILESYSTEM, \"genericPointerToWireType\": genericPointerToWireType, \"getBasestPointer\": getBasestPointer, \"getInheritedInstance\": getInheritedInstance, \"getInheritedInstanceCount\": getInheritedInstanceCount, \"getLiveInheritedInstances\": getLiveInheritedInstances, \"getShiftFromSize\": getShiftFromSize, \"getTempRet0\": getTempRet0, \"getTypeName\": getTypeName, \"get_first_emval\": get_first_emval, \"heap32VectorToArray\": heap32VectorToArray, \"init_ClassHandle\": init_ClassHandle, \"init_RegisteredPointer\": init_RegisteredPointer, \"init_embind\": init_embind, \"init_emval\": init_emval, \"integerReadValueFromPointer\": integerReadValueFromPointer, \"invoke_dd\": invoke_dd, \"invoke_i\": invoke_i, \"invoke_ii\": invoke_ii, \"invoke_iii\": invoke_iii, \"invoke_iiiiiiiii\": invoke_iiiiiiiii, \"invoke_iiiijj\": invoke_iiiijj, \"invoke_vi\": invoke_vi, \"invoke_vii\": invoke_vii, \"invoke_viii\": invoke_viii, \"invoke_viiii\": invoke_viiii, \"invoke_viiiii\": invoke_viiiii, \"jsStackTrace\": jsStackTrace, \"makeClassHandle\": makeClassHandle, \"makeLegalFunctionName\": makeLegalFunctionName, \"memory\": wasmMemory, \"new_\": new_, \"nonConstNoSmartPtrRawPointerToWireType\": nonConstNoSmartPtrRawPointerToWireType, \"readLatin1String\": readLatin1String, \"registerType\": registerType, \"releaseClassHandle\": releaseClassHandle, \"replacePublicSymbol\": replacePublicSymbol, \"requireHandle\": requireHandle, \"requireRegisteredType\": requireRegisteredType, \"runDestructor\": runDestructor, \"runDestructors\": runDestructors, \"setDelayFunction\": setDelayFunction, \"setTempRet0\": setTempRet0, \"shallowCopyInternalPointer\": shallowCopyInternalPointer, \"simpleReadValueFromPointer\": simpleReadValueFromPointer, \"stackTrace\": stackTrace, \"table\": wasmTable, \"tempDoublePtr\": tempDoublePtr, \"throwBindingError\": throwBindingError, \"throwInstanceAlreadyDeleted\": throwInstanceAlreadyDeleted, \"throwInternalError\": throwInternalError, \"throwUnboundTypeError\": throwUnboundTypeError, \"upcastPointer\": upcastPointer, \"whenDependentTypesAreResolved\": whenDependentTypesAreResolved };\n// EMSCRIPTEN_START_ASM\nvar asm =Module[\"asm\"]// EMSCRIPTEN_END_ASM\n(asmGlobalArg, asmLibraryArg, buffer);\n\nModule[\"asm\"] = asm;\nvar __ZSt18uncaught_exceptionv = Module[\"__ZSt18uncaught_exceptionv\"] = function() {\n  return Module[\"asm\"][\"__ZSt18uncaught_exceptionv\"].apply(null, arguments)\n};\n\nvar ___cxa_can_catch = Module[\"___cxa_can_catch\"] = function() {\n  return Module[\"asm\"][\"___cxa_can_catch\"].apply(null, arguments)\n};\n\nvar ___cxa_is_pointer_type = Module[\"___cxa_is_pointer_type\"] = function() {\n  return Module[\"asm\"][\"___cxa_is_pointer_type\"].apply(null, arguments)\n};\n\nvar ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function() {\n  return Module[\"asm\"][\"___embind_register_native_and_builtin_types\"].apply(null, arguments)\n};\n\nvar ___getTypeName = Module[\"___getTypeName\"] = function() {\n  return Module[\"asm\"][\"___getTypeName\"].apply(null, arguments)\n};\n\nvar _emscripten_get_sbrk_ptr = Module[\"_emscripten_get_sbrk_ptr\"] = function() {\n  return Module[\"asm\"][\"_emscripten_get_sbrk_ptr\"].apply(null, arguments)\n};\n\nvar _emscripten_replace_memory = Module[\"_emscripten_replace_memory\"] = function() {\n  return Module[\"asm\"][\"_emscripten_replace_memory\"].apply(null, arguments)\n};\n\nvar _free = Module[\"_free\"] = function() {\n  return Module[\"asm\"][\"_free\"].apply(null, arguments)\n};\n\nvar _llvm_round_f64 = Module[\"_llvm_round_f64\"] = function() {\n  return Module[\"asm\"][\"_llvm_round_f64\"].apply(null, arguments)\n};\n\nvar _malloc = Module[\"_malloc\"] = function() {\n  return Module[\"asm\"][\"_malloc\"].apply(null, arguments)\n};\n\nvar _memcpy = Module[\"_memcpy\"] = function() {\n  return Module[\"asm\"][\"_memcpy\"].apply(null, arguments)\n};\n\nvar _memmove = Module[\"_memmove\"] = function() {\n  return Module[\"asm\"][\"_memmove\"].apply(null, arguments)\n};\n\nvar _memset = Module[\"_memset\"] = function() {\n  return Module[\"asm\"][\"_memset\"].apply(null, arguments)\n};\n\nvar _realloc = Module[\"_realloc\"] = function() {\n  return Module[\"asm\"][\"_realloc\"].apply(null, arguments)\n};\n\nvar _saveSetjmp = Module[\"_saveSetjmp\"] = function() {\n  return Module[\"asm\"][\"_saveSetjmp\"].apply(null, arguments)\n};\n\nvar _setThrew = Module[\"_setThrew\"] = function() {\n  return Module[\"asm\"][\"_setThrew\"].apply(null, arguments)\n};\n\nvar _testSetjmp = Module[\"_testSetjmp\"] = function() {\n  return Module[\"asm\"][\"_testSetjmp\"].apply(null, arguments)\n};\n\nvar establishStackSpace = Module[\"establishStackSpace\"] = function() {\n  return Module[\"asm\"][\"establishStackSpace\"].apply(null, arguments)\n};\n\nvar globalCtors = Module[\"globalCtors\"] = function() {\n  return Module[\"asm\"][\"globalCtors\"].apply(null, arguments)\n};\n\nvar stackAlloc = Module[\"stackAlloc\"] = function() {\n  return Module[\"asm\"][\"stackAlloc\"].apply(null, arguments)\n};\n\nvar stackRestore = Module[\"stackRestore\"] = function() {\n  return Module[\"asm\"][\"stackRestore\"].apply(null, arguments)\n};\n\nvar stackSave = Module[\"stackSave\"] = function() {\n  return Module[\"asm\"][\"stackSave\"].apply(null, arguments)\n};\n\nvar dynCall_dd = Module[\"dynCall_dd\"] = function() {\n  return Module[\"asm\"][\"dynCall_dd\"].apply(null, arguments)\n};\n\nvar dynCall_i = Module[\"dynCall_i\"] = function() {\n  return Module[\"asm\"][\"dynCall_i\"].apply(null, arguments)\n};\n\nvar dynCall_ii = Module[\"dynCall_ii\"] = function() {\n  return Module[\"asm\"][\"dynCall_ii\"].apply(null, arguments)\n};\n\nvar dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_iidiiii\"].apply(null, arguments)\n};\n\nvar dynCall_iii = Module[\"dynCall_iii\"] = function() {\n  return Module[\"asm\"][\"dynCall_iii\"].apply(null, arguments)\n};\n\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_iiii\"].apply(null, arguments)\n};\n\nvar dynCall_iiiii = Module[\"dynCall_iiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_iiiii\"].apply(null, arguments)\n};\n\nvar dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_iiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_iiiiiiii = Module[\"dynCall_iiiiiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_iiiiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_iiiiiiiii = Module[\"dynCall_iiiiiiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_iiiiiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_iiiiiiiiii = Module[\"dynCall_iiiiiiiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_iiiiiiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_iiiiiiiiiii = Module[\"dynCall_iiiiiiiiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_iiiiiiiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_iiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_iiiiiiiiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_iiiiiiiiiiiiiiiiii = Module[\"dynCall_iiiiiiiiiiiiiiiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_iiiiiiiiiiiiiiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_iiiijj = Module[\"dynCall_iiiijj\"] = function() {\n  return Module[\"asm\"][\"dynCall_iiiijj\"].apply(null, arguments)\n};\n\nvar dynCall_iiijiii = Module[\"dynCall_iiijiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_iiijiii\"].apply(null, arguments)\n};\n\nvar dynCall_iij = Module[\"dynCall_iij\"] = function() {\n  return Module[\"asm\"][\"dynCall_iij\"].apply(null, arguments)\n};\n\nvar dynCall_ji = Module[\"dynCall_ji\"] = function() {\n  return Module[\"asm\"][\"dynCall_ji\"].apply(null, arguments)\n};\n\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n  return Module[\"asm\"][\"dynCall_jiji\"].apply(null, arguments)\n};\n\nvar dynCall_v = Module[\"dynCall_v\"] = function() {\n  return Module[\"asm\"][\"dynCall_v\"].apply(null, arguments)\n};\n\nvar dynCall_vi = Module[\"dynCall_vi\"] = function() {\n  return Module[\"asm\"][\"dynCall_vi\"].apply(null, arguments)\n};\n\nvar dynCall_vii = Module[\"dynCall_vii\"] = function() {\n  return Module[\"asm\"][\"dynCall_vii\"].apply(null, arguments)\n};\n\nvar dynCall_viii = Module[\"dynCall_viii\"] = function() {\n  return Module[\"asm\"][\"dynCall_viii\"].apply(null, arguments)\n};\n\nvar dynCall_viiii = Module[\"dynCall_viiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_viiii\"].apply(null, arguments)\n};\n\nvar dynCall_viiiii = Module[\"dynCall_viiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_viiiii\"].apply(null, arguments)\n};\n\nvar dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_viiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_viiiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_viiiiiiiiiii = Module[\"dynCall_viiiiiiiiiii\"] = function() {\n  return Module[\"asm\"][\"dynCall_viiiiiiiiiii\"].apply(null, arguments)\n};\n\nvar dynCall_vijj = Module[\"dynCall_vijj\"] = function() {\n  return Module[\"asm\"][\"dynCall_vijj\"].apply(null, arguments)\n};\n;\n\n\n\n// === Auto-generated postamble setup entry stuff ===\n\nModule['asm'] = asm;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar calledRun;\n\n// Modularize mode returns a function, which can be called to\n// create instances. The instances provide a then() method,\n// must like a Promise, that receives a callback. The callback\n// is called when the module is ready to run, with the module\n// as a parameter. (Like a Promise, it also returns the module\n// so you can use the output of .then(..)).\nModule['then'] = function(func) {\n  // We may already be ready to run code at this time. if\n  // so, just queue a call to the callback.\n  if (calledRun) {\n    func(Module);\n  } else {\n    // we are not ready to call then() yet. we must call it\n    // at the same time we would call onRuntimeInitialized.\n    var old = Module['onRuntimeInitialized'];\n    Module['onRuntimeInitialized'] = function() {\n      if (old) old();\n      func(Module);\n    };\n  }\n  return Module;\n};\n\n/**\n * @constructor\n * @this {ExitStatus}\n */\nfunction ExitStatus(status) {\n  this.name = \"ExitStatus\";\n  this.message = \"Program terminated with exit(\" + status + \")\";\n  this.status = status;\n}\n\nvar calledMain = false;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\n\n\n\n\n/** @type {function(Array=)} */\nfunction run(args) {\n  args = args || arguments_;\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n\n  preRun();\n\n  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later\n\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n\n    if (ABORT) return;\n\n    initRuntime();\n\n    preMain();\n\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else\n  {\n    doRun();\n  }\n}\nModule['run'] = run;\n\n\nfunction exit(status, implicit) {\n\n  // if this is just main exit-ing implicitly, and the status is 0, then we\n  // don't need to do anything here and can just leave. if the status is\n  // non-zero, though, then we need to report it.\n  // (we may have warned about this earlier, if a situation justifies doing so)\n  if (implicit && noExitRuntime && status === 0) {\n    return;\n  }\n\n  if (noExitRuntime) {\n  } else {\n\n    ABORT = true;\n    EXITSTATUS = status;\n\n    exitRuntime();\n\n    if (Module['onExit']) Module['onExit'](status);\n  }\n\n  quit_(status, new ExitStatus(status));\n}\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\n\n  noExitRuntime = true;\n\nrun();\n\n\n\n\n\n// {{MODULE_ADDITIONS}}\n\n\n\n\n\n  return Module\n}\n);\n})();\nexport default Module;","/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default {\n  width: 300,\n  height: 150,\n  timebaseNum: 1,\n  timebaseDen: 30,\n  bitrate: 200,\n  realtime: false,\n  lossless: 1,\n  speed: 9\n};\n","/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport webmWasm from \"../../dist/webm-wasm.js\";\n\n// Below you find the “Interop between Node and Web is fun” section.\n// On the web you can communicate with the main thread via `self`.\n// In node land you need to get the `parentPort` from the `worker_threads`\n// module.\nlet parentPort;\ntry {\n  ({ parentPort } = require(\"worker_threads\"));\n} catch (_) {\n  parentPort = self;\n}\n\n// On the web you get a `MessageEvent` which has the message payload on\n// it’s `.data` property.\n// In node land the event is the message payload itself.\nfunction onMessage(target, f) {\n  if (\"on\" in target) {\n    return target.on(\"message\", f);\n  }\n  return target.addEventListener(\"message\", e => f(e.data));\n}\n\nfunction nextMessage(target) {\n  return new Promise(resolve => {\n    if (\"once\" in target) {\n      return target.once(\"message\", resolve);\n    }\n    return target.addEventListener(\"message\", e => resolve(e.data), {\n      once: true\n    });\n  });\n}\n\nfunction initWasmModule(moduleFactory, wasmUrl) {\n  return new Promise(resolve => {\n    const module = moduleFactory({\n      // Just to be safe, don't automatically invoke any wasm functions\n      noInitialRun: true,\n      locateFile(url) {\n        if (url.endsWith(\".wasm\")) {\n          return wasmUrl;\n        }\n        return url;\n      },\n      onRuntimeInitialized() {\n        // An Emscripten is a then-able that resolves with itself, causing an infite loop when you\n        // wrap it in a real promise. Delete the `then` prop solves this for now.\n        // https://github.com/kripken/emscripten/issues/5820\n        delete module.then;\n        resolve(module);\n      }\n    });\n  });\n}\n\nimport defaultConfig from \"./defaults.js\";\n\nasync function init() {\n  const wasmPath = await nextMessage(parentPort, \"message\");\n  const module = await initWasmModule(webmWasm, wasmPath);\n  parentPort.postMessage(\"READY\");\n  const userParams = await nextMessage(parentPort, \"message\");\n  const params = Object.assign({}, defaultConfig, userParams);\n  if(!('kLive' in params)) {\n    params.kLive = params.realtime;\n  }\n  const instance = new module.WebmEncoder(\n    params.timebaseNum,\n    params.timebaseDen,\n    params.width,\n    params.height,\n    params.bitrate,\n    params.realtime,\n    params.kLive,\n    params.lossless,\n    params.speed,\n    chunk => {\n      const copy = new Uint8Array(chunk);\n      parentPort.postMessage(copy.buffer, [copy.buffer]);\n    }\n  );\n  onMessage(parentPort, msg => {\n    console.log(msg);\n    // A false-y message indicates the end-of-stream.\n    // if (!msg) {\n    //   // This will invoke the callback to flush\n    //   instance.finalize();\n    //   // Signal the end-of-stream\n    //   parentPort.postMessage(null);\n    //   // Free up the memory.\n    //   instance.delete();\n    //   return;\n    // } \n\n    // if (!!msg.data && msg.data.last) {\n    //   console.log(msg);\n    //   // instance.closeEncoder(msg.buffer, msg.ccd);\n    // } else {\n    //   instance.addRGBAFrame(msg);\n    // }\n\n    \n  });\n}\ninit();\n"],"names":["Module","_scriptDir","import","moduleOverrides","key","hasOwnProperty","arguments_","thisProgram","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_HAS_NODE","ENVIRONMENT_IS_SHELL","window","importScripts","process","versions","node","scriptDirectory","locateFile","path","read_","readBinary","__dirname","nodeFS","nodePath","shell_read","filename","binary","ret","require","toString","buffer","Uint8Array","assert","length","replace","slice","ex","ExitStatus","abort","read","f","data","readbuffer","scriptArgs","arguments","print","console","log","warn","error","printErr","self","location","href","document","currentScript","src","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","out","bind","err","asm2wasmImports","x","y","functionPointers","Array","tempRet0","setTempRet0","value","getTempRet0","wasmBinary","WebAssembly","wasmMemory","wasmTable","Table","ABORT","condition","text","UTF8Decoder","TextDecoder","undefined","UTF8ArrayToString","u8Array","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","str","u0","String","fromCharCode","u1","u2","ch","UTF8ToString","ptr","HEAPU8","stringToUTF8Array","outU8Array","outIdx","maxBytesToWrite","startIdx","i","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","UTF16Decoder","WASM_PAGE_SIZE","alignUp","multiple","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","DYNAMIC_BASE","DYNAMICTOP_PTR","INITIAL_TOTAL_MEMORY","Memory","byteLength","callRuntimeCallbacks","callbacks","callback","shift","func","arg","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","preRun","addOnPreRun","initRuntime","preMain","postRun","addOnPostRun","cb","unshift","runDependencies","dependenciesFulfilled","addRunDependency","id","removeRunDependency","what","dataURIPrefix","isDataURI","prototype","startsWith","wasmBinaryFile","getBinary","getBinaryPromise","fetch","credentials","then","Promise","resolve","reject","createWasm","info","asmLibraryArg","NaN","Infinity","Math","receiveInstance","instance","module","exports","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","instantiate","reason","instantiateAsync","instantiateStreaming","result","e","push","globalCtors","tempDoublePtr","demangle","demangleAll","regex","jsStackTrace","Error","stack","stackTrace","js","___cxa_allocate_exception","size","_malloc","___exception_infos","___exception_addRef","refcount","___exception_deAdjust","adjusted","adj","___cxa_begin_catch","caught","__ZSt18uncaught_exceptionv","uncaught_exceptions","rethrown","___cxa_throw","type","destructor","___gxx_personality_v0","___lock","___setErrNo","SYSCALLS","buffers","printChar","stream","curr","varargs","get","getStr","get64","low","high","getZero","___syscall221","which","FS","ErrnoError","errno","___syscall5","pathname","flags","mode","fd","___syscall54","___unlock","_fd_close","___wasi_fd_close","apply","_fd_read","iov","iovcnt","pnum","getStreamFromFD","num","doReadv","___wasi_fd_read","_fd_seek","offset_low","offset_high","whence","newOffset","___wasi_fd_seek","flush_NO_FILESYSTEM","fflush","_fd_write","j","___wasi_fd_write","getShiftFromSize","TypeError","embind_init_charCodes","codes","embind_charCodes","readLatin1String","c","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","name","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","message","Object","create","constructor","BindingError","throwBindingError","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","forEach","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","rawType","registeredInstance","options","ignoreDuplicateRegistrations","__embind_register_bool","trueValue","falseValue","wt","destructors","o","pointer","heap","destructorFunction","ClassHandle_isAliasOf","other","ClassHandle","leftClass","$$","ptrType","registeredClass","left","rightClass","right","baseClass","upcast","shallowCopyInternalPointer","count","deleteScheduled","preservePointerOnDelete","smartPtr","smartPtrType","throwInstanceAlreadyDeleted","obj","getInstanceTypeName","handle","finalizationGroup","detachFinalizer","runDestructor","rawDestructor","releaseClassHandle","toDelete","attachFinalizer","FinalizationGroup","iter","next","done","register","unregister","ClassHandle_clone","clone","getPrototypeOf","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","pop","ClassHandle_deleteLater","init_ClassHandle","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","argCount","exposePublicSymbol","numArguments","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","__emval_register","nonConstNoSmartPtrRawPointerToWireType","simpleReadValueFromPointer","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","rv","getInheritedInstanceCount","keys","registeredInstances","getLiveInheritedInstances","k","setDelayFunction","fn","init_embind","getBasestPointer","class_","getInheritedInstance","makeClassHandle","record","hasSmartPtrType","hasSmartPtr","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","pointeeType","actualType","registeredPointerRecord","call","toType","constPointerType","pointerType","dp","init_RegisteredPointer","RegisteredPointer","replacePublicSymbol","embind__requireFunction","signature","rawFunction","makeDynCaller","dynCall","args","join","fp","FUNCTION_TABLE","dc","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","visit","map","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","heap32VectorToArray","firstElement","array","runDestructors","del","__embind_register_class_constructor","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","classType","unboundTypeHandler","argTypes","new_","argumentList","dummy","r","craftInvokerFunction","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","invokerFunction","__embind_register_class_function","rawInvoker","context","isPureVirtual","unboundTypesHandler","method","className","memberFunction","emval_free_list","emval_handle_array","__emval_decref","count_emval_handles","get_first_emval","init_emval","__embind_register_emval","v","t","floatReadValueFromPointer","__embind_register_float","integerReadValueFromPointer","signed","readS8FromPointer","readU8FromPointer","readS16FromPointer","readU16FromPointer","readS32FromPointer","readU32FromPointer","__embind_register_integer","primitiveType","minRange","maxRange","fromWireType","bitshift","isUnsignedType","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","__embind_register_std_string","stdStringIsUTF8","endChar","endCharSwap","decodeStartPtr","currentBytePtr","stringSegment","a","ArrayBuffer","getLength","valueIsOfTypeString","Uint8ClampedArray","charCode","__embind_register_std_wstring","charSize","getHeap","HEAP","start","__embind_register_void","isVoid","requireRegisteredType","impl","__emval_lookupTypes","argWireTypes","requireHandle","__emval_call","argv","__emval_incref","__emval_take_value","_abort","_emscripten_get_heap_size","abortOnCannotGrowMemory","requestedSize","emscripten_realloc_buffer","grow","_emscripten_resize_heap","oldSize","PAGE_MULTIPLE","LIMIT","MIN_TOTAL_MEMORY","newSize","max","min","replacement","_gettimeofday","now","Date","_llvm_log10_f32","LN10","_llvm_log10_f64","a0","_llvm_trap","_longjmp","env","_setThrew","_emscripten_memcpy_big","dest","set","_pthread_cond_destroy","_pthread_cond_init","_pthread_create","_pthread_join","_time","invoke_dd","index","a1","sp","stackSave","dynCall_dd","stackRestore","invoke_i","dynCall_i","invoke_ii","dynCall_ii","invoke_iii","a2","dynCall_iii","invoke_iiiiiiiii","a3","a4","a5","a6","a7","a8","dynCall_iiiiiiiii","invoke_iiiijj","dynCall_iiiijj","invoke_vi","dynCall_vi","invoke_vii","dynCall_vii","invoke_viii","dynCall_viii","invoke_viiii","dynCall_viiii","invoke_viiiii","dynCall_viiiii","asmGlobalArg","asm","___cxa_can_catch","___cxa_is_pointer_type","___embind_register_native_and_builtin_types","_emscripten_get_sbrk_ptr","_emscripten_replace_memory","_llvm_round_f64","_memcpy","_memmove","_memset","_realloc","_saveSetjmp","_testSetjmp","establishStackSpace","stackAlloc","dynCall_iidiiii","dynCall_iiii","dynCall_iiiii","dynCall_iiiiii","dynCall_iiiiiiii","dynCall_iiiiiiiiii","dynCall_iiiiiiiiiii","dynCall_iiiiiiiiiiii","dynCall_iiiiiiiiiiiiiiiiii","dynCall_iiijiii","dynCall_iij","dynCall_ji","dynCall_jiji","dynCall_v","dynCall_viiiiii","dynCall_viiiiiii","dynCall_viiiiiiiiiii","dynCall_vijj","calledRun","old","status","runCaller","run","doRun","setTimeout","width","height","timebaseNum","timebaseDen","bitrate","realtime","lossless","speed","init","nextMessage","parentPort","wasmPath","initWasmModule","webmWasm","postMessage","userParams","params","assign","defaultConfig","kLive","WebmEncoder","chunk","copy","onMessage","msg","_","target","on","addEventListener","once","moduleFactory","wasmUrl","noInitialRun","endsWith","onRuntimeInitialized"],"mappings":"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"}